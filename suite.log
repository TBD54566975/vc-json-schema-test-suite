{
  "title": "",
  "ctx": null,
  "suites": [
    {
      "title": "JsonSchema â€“ JSON Schema 2019-09",
      "ctx": null,
      "suites": [
        {
          "title": "tbd",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "hQYKZl5RZekO_AdpmHLur",
              "ctx": null,
              "_testId": "urn:uuid:98fc8b97-8cda-498d-8a91-5e2f94987305",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 63147,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential."
              },
              "duration": 64011,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2.1 The type property MUST be JsonSchema.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "hQYKZl5RZekO_AdpmHLur",
              "ctx": null,
              "_testId": "urn:uuid:25e0a7da-abfa-4e05-b959-d198550547f5",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 65295,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.1 The type property MUST be JsonSchema."
              },
              "duration": 2176,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes",
              "body": "function() {\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          if (schemaVersionName === JsonSchemaVersions['202012']) {\n            should.equal(true, true);\n          } else {\n            this.skip();\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "hQYKZl5RZekO_AdpmHLur",
              "ctx": null,
              "_testId": "urn:uuid:41cb75af-7745-4b73-9ed7-266f3b5ed96b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "tbd",
                "rowId": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes"
              },
              "duration": 1,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "hQYKZl5RZekO_AdpmHLur",
              "ctx": null,
              "_testId": "urn:uuid:e62dbdb2-7678-42a5-8e47-285e32ea02e2",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 67464,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference"
              },
              "duration": 3246,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3.1.2, 4 The $schema property MUST be present in each schema",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "hQYKZl5RZekO_AdpmHLur",
              "ctx": null,
              "_testId": "urn:uuid:cda035f8-b039-4517-9640-b332373f2c62",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 70697,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "3.1.2, 4 The $schema property MUST be present in each schema"
              },
              "duration": 2173,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "hQYKZl5RZekO_AdpmHLur",
              "ctx": null,
              "_testId": "urn:uuid:f5737a4e-3cd5-4d77-8992-ce8457fdde51",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 72871,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 1157,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "hQYKZl5RZekO_AdpmHLur",
              "ctx": null,
              "_testId": "urn:uuid:359417de-f44f-45ca-84f7-0d81b5292567",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 74010,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 1139,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "hQYKZl5RZekO_AdpmHLur",
              "ctx": null,
              "_testId": "urn:uuid:034629ac-2ac7-4faa-abae-4e42bb1a2aa0",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 75203,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 1193,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 150000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "HvpC54z59VDk-nsptFiox",
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "_testId": "urn:uuid:2fa68afe-7e5b-48f1-8ca9-92120fbfa5b5"
        }
      ],
      "tests": [
        {
          "type": "test",
          "title": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "hQYKZl5RZekO_AdpmHLur",
          "ctx": null,
          "_testId": "urn:uuid:98fc8b97-8cda-498d-8a91-5e2f94987305",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 63147,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential."
          },
          "duration": 64011,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "2.1 The type property MUST be JsonSchema.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "hQYKZl5RZekO_AdpmHLur",
          "ctx": null,
          "_testId": "urn:uuid:25e0a7da-abfa-4e05-b959-d198550547f5",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 65295,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.1 The type property MUST be JsonSchema."
          },
          "duration": 2176,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes",
          "body": "function() {\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          if (schemaVersionName === JsonSchemaVersions['202012']) {\n            should.equal(true, true);\n          } else {\n            this.skip();\n          }\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": true,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "hQYKZl5RZekO_AdpmHLur",
          "ctx": null,
          "_testId": "urn:uuid:41cb75af-7745-4b73-9ed7-266f3b5ed96b",
          "_events": {},
          "_eventsCount": 1,
          "cell": {
            "columnId": "tbd",
            "rowId": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes"
          },
          "duration": 1,
          "state": "pending"
        },
        {
          "type": "test",
          "title": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "hQYKZl5RZekO_AdpmHLur",
          "ctx": null,
          "_testId": "urn:uuid:e62dbdb2-7678-42a5-8e47-285e32ea02e2",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 67464,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference"
          },
          "duration": 3246,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "3.1.2, 4 The $schema property MUST be present in each schema",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "hQYKZl5RZekO_AdpmHLur",
          "ctx": null,
          "_testId": "urn:uuid:cda035f8-b039-4517-9640-b332373f2c62",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 70697,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "3.1.2, 4 The $schema property MUST be present in each schema"
          },
          "duration": 2173,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "hQYKZl5RZekO_AdpmHLur",
          "ctx": null,
          "_testId": "urn:uuid:f5737a4e-3cd5-4d77-8992-ce8457fdde51",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 72871,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 1157,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "hQYKZl5RZekO_AdpmHLur",
          "ctx": null,
          "_testId": "urn:uuid:359417de-f44f-45ca-84f7-0d81b5292567",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 74010,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 1139,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "hQYKZl5RZekO_AdpmHLur",
          "ctx": null,
          "_testId": "urn:uuid:034629ac-2ac7-4faa-abae-4e42bb1a2aa0",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 75203,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 1193,
          "state": "passed",
          "speed": "slow"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 150000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "9pqVI9BFEBL-NFZ3i47l2",
      "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
      "matrix": true,
      "report": true,
      "implemented": [
        "tbd"
      ],
      "rowLabel": "Test Name",
      "columnLabel": "Implementation",
      "_testId": "urn:uuid:03c29b79-09f8-48a9-86db-228db038614d"
    },
    {
      "title": "JsonSchema â€“ JSON Schema 2020-12",
      "ctx": null,
      "suites": [
        {
          "title": "tbd",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "TOM16GeTh-osknmCEbK-x",
              "ctx": null,
              "_testId": "urn:uuid:e43f85e4-392a-4f0a-a136-bbd86f064364",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 76380,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential."
              },
              "duration": 2180,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2.1 The type property MUST be JsonSchema.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "TOM16GeTh-osknmCEbK-x",
              "ctx": null,
              "_testId": "urn:uuid:de816559-b693-4a9b-bc5b-d22f4e0fc7d5",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 78535,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.1 The type property MUST be JsonSchema."
              },
              "duration": 2156,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes",
              "body": "function() {\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          if (schemaVersionName === JsonSchemaVersions['202012']) {\n            should.equal(true, true);\n          } else {\n            this.skip();\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "TOM16GeTh-osknmCEbK-x",
              "ctx": null,
              "_testId": "urn:uuid:3cb112c1-042f-4364-bbe0-9d708e570869",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "tbd",
                "rowId": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes"
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "TOM16GeTh-osknmCEbK-x",
              "ctx": null,
              "_testId": "urn:uuid:6d8b44eb-3964-4b23-8dd6-905342f3ca6b",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 80692,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference"
              },
              "duration": 3187,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3.1.2, 4 The $schema property MUST be present in each schema",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "TOM16GeTh-osknmCEbK-x",
              "ctx": null,
              "_testId": "urn:uuid:88e901c4-33c6-4fcc-816d-ad1736c3886b",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 83916,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "3.1.2, 4 The $schema property MUST be present in each schema"
              },
              "duration": 2246,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "TOM16GeTh-osknmCEbK-x",
              "ctx": null,
              "_testId": "urn:uuid:76d6ee92-4532-48c1-b9eb-a5c384069889",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 86137,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 1161,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "TOM16GeTh-osknmCEbK-x",
              "ctx": null,
              "_testId": "urn:uuid:3db079f5-6189-4bd1-b6dc-112ba382f7a4",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 87337,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 1200,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "TOM16GeTh-osknmCEbK-x",
              "ctx": null,
              "_testId": "urn:uuid:bd7ff197-85e7-4926-ba40-51704d462286",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 88540,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 1203,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 150000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "xoYfNFi07y4g4I5vi5AZr",
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "_testId": "urn:uuid:69dc89c3-df16-4677-8a7e-f4b23a37bad7"
        }
      ],
      "tests": [
        {
          "type": "test",
          "title": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "TOM16GeTh-osknmCEbK-x",
          "ctx": null,
          "_testId": "urn:uuid:e43f85e4-392a-4f0a-a136-bbd86f064364",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 76380,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential."
          },
          "duration": 2180,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "2.1 The type property MUST be JsonSchema.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "TOM16GeTh-osknmCEbK-x",
          "ctx": null,
          "_testId": "urn:uuid:de816559-b693-4a9b-bc5b-d22f4e0fc7d5",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 78535,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.1 The type property MUST be JsonSchema."
          },
          "duration": 2156,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes",
          "body": "function() {\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          if (schemaVersionName === JsonSchemaVersions['202012']) {\n            should.equal(true, true);\n          } else {\n            this.skip();\n          }\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "TOM16GeTh-osknmCEbK-x",
          "ctx": null,
          "_testId": "urn:uuid:3cb112c1-042f-4364-bbe0-9d708e570869",
          "_events": {},
          "_eventsCount": 1,
          "cell": {
            "columnId": "tbd",
            "rowId": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes"
          },
          "duration": 0,
          "state": "passed",
          "speed": "fast"
        },
        {
          "type": "test",
          "title": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "TOM16GeTh-osknmCEbK-x",
          "ctx": null,
          "_testId": "urn:uuid:6d8b44eb-3964-4b23-8dd6-905342f3ca6b",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 80692,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference"
          },
          "duration": 3187,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "3.1.2, 4 The $schema property MUST be present in each schema",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "TOM16GeTh-osknmCEbK-x",
          "ctx": null,
          "_testId": "urn:uuid:88e901c4-33c6-4fcc-816d-ad1736c3886b",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 83916,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "3.1.2, 4 The $schema property MUST be present in each schema"
          },
          "duration": 2246,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "TOM16GeTh-osknmCEbK-x",
          "ctx": null,
          "_testId": "urn:uuid:76d6ee92-4532-48c1-b9eb-a5c384069889",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 86137,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 1161,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "TOM16GeTh-osknmCEbK-x",
          "ctx": null,
          "_testId": "urn:uuid:3db079f5-6189-4bd1-b6dc-112ba382f7a4",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 87337,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 1200,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "TOM16GeTh-osknmCEbK-x",
          "ctx": null,
          "_testId": "urn:uuid:bd7ff197-85e7-4926-ba40-51704d462286",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 88540,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 1203,
          "state": "passed",
          "speed": "slow"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 150000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "9pqVI9BFEBL-NFZ3i47l2",
      "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
      "matrix": true,
      "report": true,
      "implemented": [
        "tbd"
      ],
      "rowLabel": "Test Name",
      "columnLabel": "Implementation",
      "_testId": "urn:uuid:be697c8a-4ddc-4e27-ab14-f612151ba1bf"
    },
    {
      "title": "JsonSchema â€“ JSON Schema Draft-7",
      "ctx": null,
      "suites": [
        {
          "title": "tbd",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "BiwOd1gl9wpfVv7zLzbAR",
              "ctx": null,
              "_testId": "urn:uuid:6d8360fd-2974-4b22-ace3-125f72a78aaf",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 89743,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential."
              },
              "duration": 2225,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2.1 The type property MUST be JsonSchema.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "BiwOd1gl9wpfVv7zLzbAR",
              "ctx": null,
              "_testId": "urn:uuid:215635cf-1856-4164-bc61-455cc373a164",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 91939,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.1 The type property MUST be JsonSchema."
              },
              "duration": 2218,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes",
              "body": "function() {\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          if (schemaVersionName === JsonSchemaVersions['202012']) {\n            should.equal(true, true);\n          } else {\n            this.skip();\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "BiwOd1gl9wpfVv7zLzbAR",
              "ctx": null,
              "_testId": "urn:uuid:1d5b2f36-5f2d-4443-87d4-92ef3397a312",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "tbd",
                "rowId": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes"
              },
              "duration": 1,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "BiwOd1gl9wpfVv7zLzbAR",
              "ctx": null,
              "_testId": "urn:uuid:19dcd584-00ae-4670-8cd1-97c9af59e532",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 94137,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference"
              },
              "duration": 3228,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3.1.2, 4 The $schema property MUST be present in each schema",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "BiwOd1gl9wpfVv7zLzbAR",
              "ctx": null,
              "_testId": "urn:uuid:5dccbc32-a784-4dc2-9841-4efab7f16581",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 97409,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "3.1.2, 4 The $schema property MUST be present in each schema"
              },
              "duration": 2254,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "BiwOd1gl9wpfVv7zLzbAR",
              "ctx": null,
              "_testId": "urn:uuid:80aee989-e530-438f-86d0-95c9f62c1c1f",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 99622,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 1154,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "BiwOd1gl9wpfVv7zLzbAR",
              "ctx": null,
              "_testId": "urn:uuid:cc4ece88-b73b-4c9b-97a6-25d8ca394ed7",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 100777,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 1155,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "BiwOd1gl9wpfVv7zLzbAR",
              "ctx": null,
              "_testId": "urn:uuid:180055a3-1829-4699-9476-e72a1f771193",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 101957,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 1180,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 150000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "YpWYoIA5lZqfTGJj3O2tV",
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "_testId": "urn:uuid:8b3a79b5-285d-4384-9c02-42abbd395475"
        }
      ],
      "tests": [
        {
          "type": "test",
          "title": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "BiwOd1gl9wpfVv7zLzbAR",
          "ctx": null,
          "_testId": "urn:uuid:6d8360fd-2974-4b22-ace3-125f72a78aaf",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 89743,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential."
          },
          "duration": 2225,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "2.1 The type property MUST be JsonSchema.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "BiwOd1gl9wpfVv7zLzbAR",
          "ctx": null,
          "_testId": "urn:uuid:215635cf-1856-4164-bc61-455cc373a164",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 91939,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.1 The type property MUST be JsonSchema."
          },
          "duration": 2218,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes",
          "body": "function() {\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          if (schemaVersionName === JsonSchemaVersions['202012']) {\n            should.equal(true, true);\n          } else {\n            this.skip();\n          }\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": true,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "BiwOd1gl9wpfVv7zLzbAR",
          "ctx": null,
          "_testId": "urn:uuid:1d5b2f36-5f2d-4443-87d4-92ef3397a312",
          "_events": {},
          "_eventsCount": 1,
          "cell": {
            "columnId": "tbd",
            "rowId": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes"
          },
          "duration": 1,
          "state": "pending"
        },
        {
          "type": "test",
          "title": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "BiwOd1gl9wpfVv7zLzbAR",
          "ctx": null,
          "_testId": "urn:uuid:19dcd584-00ae-4670-8cd1-97c9af59e532",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 94137,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference"
          },
          "duration": 3228,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "3.1.2, 4 The $schema property MUST be present in each schema",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "BiwOd1gl9wpfVv7zLzbAR",
          "ctx": null,
          "_testId": "urn:uuid:5dccbc32-a784-4dc2-9841-4efab7f16581",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 97409,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "3.1.2, 4 The $schema property MUST be present in each schema"
          },
          "duration": 2254,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "BiwOd1gl9wpfVv7zLzbAR",
          "ctx": null,
          "_testId": "urn:uuid:80aee989-e530-438f-86d0-95c9f62c1c1f",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 99622,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 1154,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "BiwOd1gl9wpfVv7zLzbAR",
          "ctx": null,
          "_testId": "urn:uuid:cc4ece88-b73b-4c9b-97a6-25d8ca394ed7",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 100777,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 1155,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "BiwOd1gl9wpfVv7zLzbAR",
          "ctx": null,
          "_testId": "urn:uuid:180055a3-1829-4699-9476-e72a1f771193",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 101957,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 1180,
          "state": "passed",
          "speed": "slow"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 150000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "9pqVI9BFEBL-NFZ3i47l2",
      "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
      "matrix": true,
      "report": true,
      "implemented": [
        "tbd"
      ],
      "rowLabel": "Test Name",
      "columnLabel": "Implementation",
      "_testId": "urn:uuid:7649368e-5660-4bff-b3fa-a17e224607ab"
    },
    {
      "title": "JsonSchemaCredential â€“ JSON Schema 2019-09",
      "ctx": null,
      "suites": [
        {
          "title": "tbd",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "iUQr0k8jpHtkzqsyRORP4",
              "ctx": null,
              "_testId": "urn:uuid:fa943bb3-9486-4c50-b9e8-e123460c1ad6",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 103129,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential."
              },
              "duration": 2219,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2.1 The type property MUST be JsonSchemaCredential.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "iUQr0k8jpHtkzqsyRORP4",
              "ctx": null,
              "_testId": "urn:uuid:5445df95-2254-4366-aa5b-bb058f24d0ab",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 105380,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.1 The type property MUST be JsonSchemaCredential."
              },
              "duration": 2209,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2.2 The credentialSubject property MUST contain two properties: type - the value of which MUST be JsonSchema; jsonSchema - an object which contains a valid JSON Schema",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "iUQr0k8jpHtkzqsyRORP4",
              "ctx": null,
              "_testId": "urn:uuid:116de7aa-0d85-4709-9f3f-038a5d613b91",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 107540,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.2 The credentialSubject property MUST contain two properties: type - the value of which MUST be JsonSchema; jsonSchema - an object which contains a valid JSON Schema"
              },
              "duration": 4224,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2.2 The value of the credentialSchema property MUST always be set to [known json schema]",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "iUQr0k8jpHtkzqsyRORP4",
              "ctx": null,
              "_testId": "urn:uuid:b87cb9da-e9e6-4c27-8734-1fe107a68f16",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 111759,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.2 The value of the credentialSchema property MUST always be set to [known json schema]"
              },
              "duration": 2189,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes",
              "body": "async function() {\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          if (schemaVersionName === JsonSchemaVersions['202012']) {\n            should.equal(true, true);\n          } else {\n            this.skip();\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "iUQr0k8jpHtkzqsyRORP4",
              "ctx": null,
              "_testId": "urn:uuid:9ecc4beb-4abf-4611-9e52-d8baad023556",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "tbd",
                "rowId": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 112950,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "iUQr0k8jpHtkzqsyRORP4",
              "ctx": null,
              "_testId": "urn:uuid:76fc693e-85ce-4361-a036-337ce8069d2a",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 113957,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference"
              },
              "duration": 3235,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3.1.2, 4 The $schema property MUST be present in each schema",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "iUQr0k8jpHtkzqsyRORP4",
              "ctx": null,
              "_testId": "urn:uuid:fb4f4563-c21e-4884-b27b-f10cc2763e92",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 117172,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "3.1.2, 4 The $schema property MUST be present in each schema"
              },
              "duration": 2149,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "iUQr0k8jpHtkzqsyRORP4",
              "ctx": null,
              "_testId": "urn:uuid:cc3b31e8-f16b-4a39-af65-9d2aea0f570e",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 119352,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 1168,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "iUQr0k8jpHtkzqsyRORP4",
              "ctx": null,
              "_testId": "urn:uuid:9aafa5bf-5723-4c9f-96b3-e5ae68aa85b5",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 120493,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 1141,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "iUQr0k8jpHtkzqsyRORP4",
              "ctx": null,
              "_testId": "urn:uuid:9d37af91-036c-4f06-a0e4-3b9d1ba6b3c6",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 121697,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 1205,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 150000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "jQgqtAjbrl70bwD2nh7Kt",
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "_testId": "urn:uuid:1b4fd8ab-83a9-4b1c-9b23-c8b93f8fea02"
        }
      ],
      "tests": [
        {
          "type": "test",
          "title": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "iUQr0k8jpHtkzqsyRORP4",
          "ctx": null,
          "_testId": "urn:uuid:fa943bb3-9486-4c50-b9e8-e123460c1ad6",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 103129,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential."
          },
          "duration": 2219,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "2.1 The type property MUST be JsonSchemaCredential.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "iUQr0k8jpHtkzqsyRORP4",
          "ctx": null,
          "_testId": "urn:uuid:5445df95-2254-4366-aa5b-bb058f24d0ab",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 105380,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.1 The type property MUST be JsonSchemaCredential."
          },
          "duration": 2209,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "2.2 The credentialSubject property MUST contain two properties: type - the value of which MUST be JsonSchema; jsonSchema - an object which contains a valid JSON Schema",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "iUQr0k8jpHtkzqsyRORP4",
          "ctx": null,
          "_testId": "urn:uuid:116de7aa-0d85-4709-9f3f-038a5d613b91",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 107540,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.2 The credentialSubject property MUST contain two properties: type - the value of which MUST be JsonSchema; jsonSchema - an object which contains a valid JSON Schema"
          },
          "duration": 4224,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "2.2 The value of the credentialSchema property MUST always be set to [known json schema]",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "iUQr0k8jpHtkzqsyRORP4",
          "ctx": null,
          "_testId": "urn:uuid:b87cb9da-e9e6-4c27-8734-1fe107a68f16",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 111759,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.2 The value of the credentialSchema property MUST always be set to [known json schema]"
          },
          "duration": 2189,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes",
          "body": "async function() {\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          if (schemaVersionName === JsonSchemaVersions['202012']) {\n            should.equal(true, true);\n          } else {\n            this.skip();\n          }\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": true,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "iUQr0k8jpHtkzqsyRORP4",
          "ctx": null,
          "_testId": "urn:uuid:9ecc4beb-4abf-4611-9e52-d8baad023556",
          "_events": {},
          "_eventsCount": 1,
          "cell": {
            "columnId": "tbd",
            "rowId": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes"
          },
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 112950,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 1,
          "state": "pending"
        },
        {
          "type": "test",
          "title": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "iUQr0k8jpHtkzqsyRORP4",
          "ctx": null,
          "_testId": "urn:uuid:76fc693e-85ce-4361-a036-337ce8069d2a",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 113957,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference"
          },
          "duration": 3235,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "3.1.2, 4 The $schema property MUST be present in each schema",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "iUQr0k8jpHtkzqsyRORP4",
          "ctx": null,
          "_testId": "urn:uuid:fb4f4563-c21e-4884-b27b-f10cc2763e92",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 117172,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "3.1.2, 4 The $schema property MUST be present in each schema"
          },
          "duration": 2149,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "iUQr0k8jpHtkzqsyRORP4",
          "ctx": null,
          "_testId": "urn:uuid:cc3b31e8-f16b-4a39-af65-9d2aea0f570e",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 119352,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 1168,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "iUQr0k8jpHtkzqsyRORP4",
          "ctx": null,
          "_testId": "urn:uuid:9aafa5bf-5723-4c9f-96b3-e5ae68aa85b5",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 120493,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 1141,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "iUQr0k8jpHtkzqsyRORP4",
          "ctx": null,
          "_testId": "urn:uuid:9d37af91-036c-4f06-a0e4-3b9d1ba6b3c6",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 121697,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 1205,
          "state": "passed",
          "speed": "slow"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 150000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "9pqVI9BFEBL-NFZ3i47l2",
      "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
      "matrix": true,
      "report": true,
      "implemented": [
        "tbd"
      ],
      "rowLabel": "Test Name",
      "columnLabel": "Implementation",
      "_testId": "urn:uuid:ab1ec85c-0e4a-4e3d-82ff-e1ce8931905e"
    },
    {
      "title": "JsonSchemaCredential â€“ JSON Schema 2020-12",
      "ctx": null,
      "suites": [
        {
          "title": "tbd",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "sxBO0Ct5Z4npGi0JM_gg1",
              "ctx": null,
              "_testId": "urn:uuid:1b00a09b-cafe-4893-818d-95207e469fc4",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 122887,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential."
              },
              "duration": 2229,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2.1 The type property MUST be JsonSchemaCredential.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "sxBO0Ct5Z4npGi0JM_gg1",
              "ctx": null,
              "_testId": "urn:uuid:d9278561-e0b7-421f-9217-a9a1f05ee638",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 125109,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.1 The type property MUST be JsonSchemaCredential."
              },
              "duration": 2216,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2.2 The credentialSubject property MUST contain two properties: type - the value of which MUST be JsonSchema; jsonSchema - an object which contains a valid JSON Schema",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "sxBO0Ct5Z4npGi0JM_gg1",
              "ctx": null,
              "_testId": "urn:uuid:823fff3b-4c82-4149-a405-04f790510ba4",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 127329,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.2 The credentialSubject property MUST contain two properties: type - the value of which MUST be JsonSchema; jsonSchema - an object which contains a valid JSON Schema"
              },
              "duration": 4303,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2.2 The value of the credentialSchema property MUST always be set to [known json schema]",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "sxBO0Ct5Z4npGi0JM_gg1",
              "ctx": null,
              "_testId": "urn:uuid:e5b95d14-8be2-449e-91ca-4c364d82a2c9",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 131609,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.2 The value of the credentialSchema property MUST always be set to [known json schema]"
              },
              "duration": 2162,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes",
              "body": "async function() {\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          if (schemaVersionName === JsonSchemaVersions['202012']) {\n            should.equal(true, true);\n          } else {\n            this.skip();\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "sxBO0Ct5Z4npGi0JM_gg1",
              "ctx": null,
              "_testId": "urn:uuid:daf3f017-ba03-45ef-9887-05e0abe08ab9",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "tbd",
                "rowId": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 132760,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "sxBO0Ct5Z4npGi0JM_gg1",
              "ctx": null,
              "_testId": "urn:uuid:429d4bc7-8d95-477c-a5bb-0a9d2b63a0fd",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 133809,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference"
              },
              "duration": 3272,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3.1.2, 4 The $schema property MUST be present in each schema",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "sxBO0Ct5Z4npGi0JM_gg1",
              "ctx": null,
              "_testId": "urn:uuid:424822b0-2768-44dd-9591-5ee936f28ac9",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 137081,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "3.1.2, 4 The $schema property MUST be present in each schema"
              },
              "duration": 2253,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "sxBO0Ct5Z4npGi0JM_gg1",
              "ctx": null,
              "_testId": "urn:uuid:47c6dce4-1bc2-48e2-bf6d-789bc5185e4e",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 139373,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 1239,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "sxBO0Ct5Z4npGi0JM_gg1",
              "ctx": null,
              "_testId": "urn:uuid:9efe1703-e854-4b77-bda7-34e0ce7b0ac5",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 140540,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 1167,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "sxBO0Ct5Z4npGi0JM_gg1",
              "ctx": null,
              "_testId": "urn:uuid:b508999d-b764-4b9e-bc41-52aa113e9c4d",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 141700,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 1161,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 150000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "rt6hStRBQ_1FQ1xBo03mr",
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "_testId": "urn:uuid:7601f879-d7dd-476a-82a4-d389a280136e"
        }
      ],
      "tests": [
        {
          "type": "test",
          "title": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "sxBO0Ct5Z4npGi0JM_gg1",
          "ctx": null,
          "_testId": "urn:uuid:1b00a09b-cafe-4893-818d-95207e469fc4",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 122887,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential."
          },
          "duration": 2229,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "2.1 The type property MUST be JsonSchemaCredential.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "sxBO0Ct5Z4npGi0JM_gg1",
          "ctx": null,
          "_testId": "urn:uuid:d9278561-e0b7-421f-9217-a9a1f05ee638",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 125109,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.1 The type property MUST be JsonSchemaCredential."
          },
          "duration": 2216,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "2.2 The credentialSubject property MUST contain two properties: type - the value of which MUST be JsonSchema; jsonSchema - an object which contains a valid JSON Schema",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "sxBO0Ct5Z4npGi0JM_gg1",
          "ctx": null,
          "_testId": "urn:uuid:823fff3b-4c82-4149-a405-04f790510ba4",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 127329,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.2 The credentialSubject property MUST contain two properties: type - the value of which MUST be JsonSchema; jsonSchema - an object which contains a valid JSON Schema"
          },
          "duration": 4303,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "2.2 The value of the credentialSchema property MUST always be set to [known json schema]",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "sxBO0Ct5Z4npGi0JM_gg1",
          "ctx": null,
          "_testId": "urn:uuid:e5b95d14-8be2-449e-91ca-4c364d82a2c9",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 131609,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.2 The value of the credentialSchema property MUST always be set to [known json schema]"
          },
          "duration": 2162,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes",
          "body": "async function() {\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          if (schemaVersionName === JsonSchemaVersions['202012']) {\n            should.equal(true, true);\n          } else {\n            this.skip();\n          }\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "sxBO0Ct5Z4npGi0JM_gg1",
          "ctx": null,
          "_testId": "urn:uuid:daf3f017-ba03-45ef-9887-05e0abe08ab9",
          "_events": {},
          "_eventsCount": 1,
          "cell": {
            "columnId": "tbd",
            "rowId": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes"
          },
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 132760,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 0,
          "state": "passed",
          "speed": "fast"
        },
        {
          "type": "test",
          "title": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "sxBO0Ct5Z4npGi0JM_gg1",
          "ctx": null,
          "_testId": "urn:uuid:429d4bc7-8d95-477c-a5bb-0a9d2b63a0fd",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 133809,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference"
          },
          "duration": 3272,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "3.1.2, 4 The $schema property MUST be present in each schema",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "sxBO0Ct5Z4npGi0JM_gg1",
          "ctx": null,
          "_testId": "urn:uuid:424822b0-2768-44dd-9591-5ee936f28ac9",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 137081,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "3.1.2, 4 The $schema property MUST be present in each schema"
          },
          "duration": 2253,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "sxBO0Ct5Z4npGi0JM_gg1",
          "ctx": null,
          "_testId": "urn:uuid:47c6dce4-1bc2-48e2-bf6d-789bc5185e4e",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 139373,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 1239,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "sxBO0Ct5Z4npGi0JM_gg1",
          "ctx": null,
          "_testId": "urn:uuid:9efe1703-e854-4b77-bda7-34e0ce7b0ac5",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 140540,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 1167,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "sxBO0Ct5Z4npGi0JM_gg1",
          "ctx": null,
          "_testId": "urn:uuid:b508999d-b764-4b9e-bc41-52aa113e9c4d",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 141700,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 1161,
          "state": "passed",
          "speed": "slow"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 150000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "9pqVI9BFEBL-NFZ3i47l2",
      "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
      "matrix": true,
      "report": true,
      "implemented": [
        "tbd"
      ],
      "rowLabel": "Test Name",
      "columnLabel": "Implementation",
      "_testId": "urn:uuid:a43231ab-a595-4aa7-b60a-1026c7e0c95d"
    },
    {
      "title": "JsonSchemaCredential â€“ JSON Schema Draft-7",
      "ctx": null,
      "suites": [
        {
          "title": "tbd",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "t2b5q43l7hFGoucaOJ8sa",
              "ctx": null,
              "_testId": "urn:uuid:2977123f-9d4f-4d44-b1d8-fd615edfa8f5",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 142840,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential."
              },
              "duration": 2171,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2.1 The type property MUST be JsonSchemaCredential.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "t2b5q43l7hFGoucaOJ8sa",
              "ctx": null,
              "_testId": "urn:uuid:7840ffe9-653c-49bd-bb2e-39c22d74c1fe",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 145107,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.1 The type property MUST be JsonSchemaCredential."
              },
              "duration": 2307,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2.2 The credentialSubject property MUST contain two properties: type - the value of which MUST be JsonSchema; jsonSchema - an object which contains a valid JSON Schema",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "t2b5q43l7hFGoucaOJ8sa",
              "ctx": null,
              "_testId": "urn:uuid:00a4044d-f544-4e0f-ab7e-f031bb49237a",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 147403,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.2 The credentialSubject property MUST contain two properties: type - the value of which MUST be JsonSchema; jsonSchema - an object which contains a valid JSON Schema"
              },
              "duration": 4320,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2.2 The value of the credentialSchema property MUST always be set to [known json schema]",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "t2b5q43l7hFGoucaOJ8sa",
              "ctx": null,
              "_testId": "urn:uuid:120d0093-ef9e-45d7-94bc-1daf28a8d1c5",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 151675,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.2 The value of the credentialSchema property MUST always be set to [known json schema]"
              },
              "duration": 2202,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes",
              "body": "async function() {\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          if (schemaVersionName === JsonSchemaVersions['202012']) {\n            should.equal(true, true);\n          } else {\n            this.skip();\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "t2b5q43l7hFGoucaOJ8sa",
              "ctx": null,
              "_testId": "urn:uuid:c7a70425-a337-4eec-a32f-4fce4b3da066",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "tbd",
                "rowId": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 152853,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "t2b5q43l7hFGoucaOJ8sa",
              "ctx": null,
              "_testId": "urn:uuid:9a124ebc-59b8-4cf7-85ac-e583e93df715",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 153925,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference"
              },
              "duration": 3281,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3.1.2, 4 The $schema property MUST be present in each schema",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "t2b5q43l7hFGoucaOJ8sa",
              "ctx": null,
              "_testId": "urn:uuid:ebbe4d74-f89e-4bca-921e-2aa6d8937a3d",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 157160,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "3.1.2, 4 The $schema property MUST be present in each schema"
              },
              "duration": 2214,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "t2b5q43l7hFGoucaOJ8sa",
              "ctx": null,
              "_testId": "urn:uuid:508274d0-e288-44b9-a6cd-833f8ce5af05",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 159367,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 1169,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "t2b5q43l7hFGoucaOJ8sa",
              "ctx": null,
              "_testId": "urn:uuid:8ac96e48-b76e-4691-a85a-92d6871a02bb",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 160579,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 1212,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "t2b5q43l7hFGoucaOJ8sa",
              "ctx": null,
              "_testId": "urn:uuid:da02bc82-44c4-49c6-b6a6-a616a5d181cf",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 161754,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 1175,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 150000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "g4ibOH-WSJzQ0SmdZmDuN",
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "_testId": "urn:uuid:ed2f429d-92e1-4bd9-a465-e39320a570f0"
        }
      ],
      "tests": [
        {
          "type": "test",
          "title": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "t2b5q43l7hFGoucaOJ8sa",
          "ctx": null,
          "_testId": "urn:uuid:2977123f-9d4f-4d44-b1d8-fd615edfa8f5",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 142840,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential."
          },
          "duration": 2171,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "2.1 The type property MUST be JsonSchemaCredential.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "t2b5q43l7hFGoucaOJ8sa",
          "ctx": null,
          "_testId": "urn:uuid:7840ffe9-653c-49bd-bb2e-39c22d74c1fe",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 145107,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.1 The type property MUST be JsonSchemaCredential."
          },
          "duration": 2307,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "2.2 The credentialSubject property MUST contain two properties: type - the value of which MUST be JsonSchema; jsonSchema - an object which contains a valid JSON Schema",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "t2b5q43l7hFGoucaOJ8sa",
          "ctx": null,
          "_testId": "urn:uuid:00a4044d-f544-4e0f-ab7e-f031bb49237a",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 147403,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.2 The credentialSubject property MUST contain two properties: type - the value of which MUST be JsonSchema; jsonSchema - an object which contains a valid JSON Schema"
          },
          "duration": 4320,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "2.2 The value of the credentialSchema property MUST always be set to [known json schema]",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "t2b5q43l7hFGoucaOJ8sa",
          "ctx": null,
          "_testId": "urn:uuid:120d0093-ef9e-45d7-94bc-1daf28a8d1c5",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 151675,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.2 The value of the credentialSchema property MUST always be set to [known json schema]"
          },
          "duration": 2202,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes",
          "body": "async function() {\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          if (schemaVersionName === JsonSchemaVersions['202012']) {\n            should.equal(true, true);\n          } else {\n            this.skip();\n          }\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": true,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "t2b5q43l7hFGoucaOJ8sa",
          "ctx": null,
          "_testId": "urn:uuid:c7a70425-a337-4eec-a32f-4fce4b3da066",
          "_events": {},
          "_eventsCount": 1,
          "cell": {
            "columnId": "tbd",
            "rowId": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes"
          },
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 152853,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 0,
          "state": "pending"
        },
        {
          "type": "test",
          "title": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "t2b5q43l7hFGoucaOJ8sa",
          "ctx": null,
          "_testId": "urn:uuid:9a124ebc-59b8-4cf7-85ac-e583e93df715",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 153925,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference"
          },
          "duration": 3281,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "3.1.2, 4 The $schema property MUST be present in each schema",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "t2b5q43l7hFGoucaOJ8sa",
          "ctx": null,
          "_testId": "urn:uuid:ebbe4d74-f89e-4bca-921e-2aa6d8937a3d",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 157160,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "3.1.2, 4 The $schema property MUST be present in each schema"
          },
          "duration": 2214,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "t2b5q43l7hFGoucaOJ8sa",
          "ctx": null,
          "_testId": "urn:uuid:508274d0-e288-44b9-a6cd-833f8ce5af05",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 159367,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 1169,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "t2b5q43l7hFGoucaOJ8sa",
          "ctx": null,
          "_testId": "urn:uuid:8ac96e48-b76e-4691-a85a-92d6871a02bb",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 160579,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 1212,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "t2b5q43l7hFGoucaOJ8sa",
          "ctx": null,
          "_testId": "urn:uuid:da02bc82-44c4-49c6-b6a6-a616a5d181cf",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 161754,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 1175,
          "state": "passed",
          "speed": "slow"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 150000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "9pqVI9BFEBL-NFZ3i47l2",
      "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
      "matrix": true,
      "report": true,
      "implemented": [
        "tbd"
      ],
      "rowLabel": "Test Name",
      "columnLabel": "Implementation",
      "_testId": "urn:uuid:8b72f15b-13dd-4d3e-8ab0-17f707bd152a"
    }
  ],
  "tests": [],
  "root": true,
  "pending": false,
  "_retries": -1,
  "_beforeEach": [],
  "_beforeAll": [],
  "_afterEach": [],
  "_afterAll": [],
  "_timeout": 150000,
  "_slow": 75,
  "_bail": false,
  "_onlyTests": [],
  "_onlySuites": [],
  "delayed": false,
  "_events": {
    "pre-require": [
      null,
      null
    ]
  },
  "_eventsCount": 1,
  "_testId": "urn:uuid:e4a4fe49-8204-424c-b3f7-0e215e641cea"
}