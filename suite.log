{
  "title": "",
  "ctx": null,
  "suites": [
    {
      "title": "JsonSchema â€“ JSON Schema 2019-09",
      "ctx": null,
      "suites": [
        {
          "title": "tbd",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "RJLeJKndJLbno32BkjN_Q",
              "ctx": null,
              "_testId": "urn:uuid:1598806e-ab4e-44d1-b335-8fb78e234996",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46403,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential."
              },
              "duration": 47152,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2.1 The type property MUST be JsonSchema.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "RJLeJKndJLbno32BkjN_Q",
              "ctx": null,
              "_testId": "urn:uuid:aa793da5-00c4-42b1-a3b0-3e10bccb7cab",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 48166,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.1 The type property MUST be JsonSchema."
              },
              "duration": 1731,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes",
              "body": "function() {\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          if (schemaVersionName === JsonSchemaVersions['202012']) {\n            should.equal(true, true);\n          } else {\n            this.skip();\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "RJLeJKndJLbno32BkjN_Q",
              "ctx": null,
              "_testId": "urn:uuid:df74b025-9a6a-4824-8174-f924c47176ae",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "tbd",
                "rowId": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes"
              },
              "duration": 0,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "RJLeJKndJLbno32BkjN_Q",
              "ctx": null,
              "_testId": "urn:uuid:dcf4077a-fe4b-4f07-a348-ff1f33acd5eb",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49932,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference"
              },
              "duration": 2550,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3.1.2, 4 The $schema property MUST be present in each schema",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "RJLeJKndJLbno32BkjN_Q",
              "ctx": null,
              "_testId": "urn:uuid:12a9def7-1fc6-455d-b7e2-697105cdcfd4",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 52465,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "3.1.2, 4 The $schema property MUST be present in each schema"
              },
              "duration": 1732,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "RJLeJKndJLbno32BkjN_Q",
              "ctx": null,
              "_testId": "urn:uuid:39229294-7d77-43b7-9ee0-1319324d80d9",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 54196,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 946,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "RJLeJKndJLbno32BkjN_Q",
              "ctx": null,
              "_testId": "urn:uuid:ef9681ec-9942-4991-b8f7-7a6a455decdf",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 55131,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 935,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "RJLeJKndJLbno32BkjN_Q",
              "ctx": null,
              "_testId": "urn:uuid:6144f9e8-4a7b-4c2c-b8a0-6d9fc16756e2",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 56082,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 951,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 150000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "nxZA84tQimPXcU8iTmK3Y",
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "_testId": "urn:uuid:16daf52a-34f1-4b67-8148-75a4f0a85955"
        }
      ],
      "tests": [
        {
          "type": "test",
          "title": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "RJLeJKndJLbno32BkjN_Q",
          "ctx": null,
          "_testId": "urn:uuid:1598806e-ab4e-44d1-b335-8fb78e234996",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 46403,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential."
          },
          "duration": 47152,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "2.1 The type property MUST be JsonSchema.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "RJLeJKndJLbno32BkjN_Q",
          "ctx": null,
          "_testId": "urn:uuid:aa793da5-00c4-42b1-a3b0-3e10bccb7cab",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 48166,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.1 The type property MUST be JsonSchema."
          },
          "duration": 1731,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes",
          "body": "function() {\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          if (schemaVersionName === JsonSchemaVersions['202012']) {\n            should.equal(true, true);\n          } else {\n            this.skip();\n          }\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": true,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "RJLeJKndJLbno32BkjN_Q",
          "ctx": null,
          "_testId": "urn:uuid:df74b025-9a6a-4824-8174-f924c47176ae",
          "_events": {},
          "_eventsCount": 1,
          "cell": {
            "columnId": "tbd",
            "rowId": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes"
          },
          "duration": 0,
          "state": "pending"
        },
        {
          "type": "test",
          "title": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "RJLeJKndJLbno32BkjN_Q",
          "ctx": null,
          "_testId": "urn:uuid:dcf4077a-fe4b-4f07-a348-ff1f33acd5eb",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 49932,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference"
          },
          "duration": 2550,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "3.1.2, 4 The $schema property MUST be present in each schema",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "RJLeJKndJLbno32BkjN_Q",
          "ctx": null,
          "_testId": "urn:uuid:12a9def7-1fc6-455d-b7e2-697105cdcfd4",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 52465,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "3.1.2, 4 The $schema property MUST be present in each schema"
          },
          "duration": 1732,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "RJLeJKndJLbno32BkjN_Q",
          "ctx": null,
          "_testId": "urn:uuid:39229294-7d77-43b7-9ee0-1319324d80d9",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 54196,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 946,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "RJLeJKndJLbno32BkjN_Q",
          "ctx": null,
          "_testId": "urn:uuid:ef9681ec-9942-4991-b8f7-7a6a455decdf",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 55131,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 935,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "RJLeJKndJLbno32BkjN_Q",
          "ctx": null,
          "_testId": "urn:uuid:6144f9e8-4a7b-4c2c-b8a0-6d9fc16756e2",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 56082,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 951,
          "state": "passed",
          "speed": "slow"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 150000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "w1T3VAN6lI8WjfRwYtETS",
      "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
      "matrix": true,
      "report": true,
      "implemented": [
        "tbd"
      ],
      "rowLabel": "Test Name",
      "columnLabel": "Implementation",
      "_testId": "urn:uuid:c00830b2-074a-474b-92b6-6d80b42fcd6e"
    },
    {
      "title": "JsonSchema â€“ JSON Schema 2020-12",
      "ctx": null,
      "suites": [
        {
          "title": "tbd",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "wcm5KOGybxT3CDBGUXZQQ",
              "ctx": null,
              "_testId": "urn:uuid:5b38059a-0da5-4071-8780-3849c003710d",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57011,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential."
              },
              "duration": 1738,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2.1 The type property MUST be JsonSchema.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "wcm5KOGybxT3CDBGUXZQQ",
              "ctx": null,
              "_testId": "urn:uuid:77940e2b-6cfa-4167-8a46-929ea168b4fe",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 58784,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.1 The type property MUST be JsonSchema."
              },
              "duration": 1754,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes",
              "body": "function() {\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          if (schemaVersionName === JsonSchemaVersions['202012']) {\n            should.equal(true, true);\n          } else {\n            this.skip();\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "wcm5KOGybxT3CDBGUXZQQ",
              "ctx": null,
              "_testId": "urn:uuid:cfeb740d-571c-49b1-a0a4-280738c913da",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "tbd",
                "rowId": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes"
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "wcm5KOGybxT3CDBGUXZQQ",
              "ctx": null,
              "_testId": "urn:uuid:abe99b14-611c-448d-a75a-4fd393199f22",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 60526,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference"
              },
              "duration": 2554,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3.1.2, 4 The $schema property MUST be present in each schema",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "wcm5KOGybxT3CDBGUXZQQ",
              "ctx": null,
              "_testId": "urn:uuid:f2dcb209-d7da-49c3-b802-d7809e155a72",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 63066,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "3.1.2, 4 The $schema property MUST be present in each schema"
              },
              "duration": 1746,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "wcm5KOGybxT3CDBGUXZQQ",
              "ctx": null,
              "_testId": "urn:uuid:1c6b34d3-4984-4809-a8f4-12cc433bce01",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 64842,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 965,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "wcm5KOGybxT3CDBGUXZQQ",
              "ctx": null,
              "_testId": "urn:uuid:0f4613d8-7fc4-4016-84ae-59fff5fe1616",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 65804,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 962,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "wcm5KOGybxT3CDBGUXZQQ",
              "ctx": null,
              "_testId": "urn:uuid:a84ff50c-2b6c-4a12-9016-57ba818c6973",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 66819,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 1015,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 150000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "U1Q_K5EQav3Uvf05abSkx",
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "_testId": "urn:uuid:52289d55-5cb8-44a4-8d47-5ca40f3d8413"
        }
      ],
      "tests": [
        {
          "type": "test",
          "title": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "wcm5KOGybxT3CDBGUXZQQ",
          "ctx": null,
          "_testId": "urn:uuid:5b38059a-0da5-4071-8780-3849c003710d",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 57011,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential."
          },
          "duration": 1738,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "2.1 The type property MUST be JsonSchema.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "wcm5KOGybxT3CDBGUXZQQ",
          "ctx": null,
          "_testId": "urn:uuid:77940e2b-6cfa-4167-8a46-929ea168b4fe",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 58784,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.1 The type property MUST be JsonSchema."
          },
          "duration": 1754,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes",
          "body": "function() {\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          if (schemaVersionName === JsonSchemaVersions['202012']) {\n            should.equal(true, true);\n          } else {\n            this.skip();\n          }\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "wcm5KOGybxT3CDBGUXZQQ",
          "ctx": null,
          "_testId": "urn:uuid:cfeb740d-571c-49b1-a0a4-280738c913da",
          "_events": {},
          "_eventsCount": 1,
          "cell": {
            "columnId": "tbd",
            "rowId": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes"
          },
          "duration": 0,
          "state": "passed",
          "speed": "fast"
        },
        {
          "type": "test",
          "title": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "wcm5KOGybxT3CDBGUXZQQ",
          "ctx": null,
          "_testId": "urn:uuid:abe99b14-611c-448d-a75a-4fd393199f22",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 60526,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference"
          },
          "duration": 2554,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "3.1.2, 4 The $schema property MUST be present in each schema",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "wcm5KOGybxT3CDBGUXZQQ",
          "ctx": null,
          "_testId": "urn:uuid:f2dcb209-d7da-49c3-b802-d7809e155a72",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 63066,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "3.1.2, 4 The $schema property MUST be present in each schema"
          },
          "duration": 1746,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "wcm5KOGybxT3CDBGUXZQQ",
          "ctx": null,
          "_testId": "urn:uuid:1c6b34d3-4984-4809-a8f4-12cc433bce01",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 64842,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 965,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "wcm5KOGybxT3CDBGUXZQQ",
          "ctx": null,
          "_testId": "urn:uuid:0f4613d8-7fc4-4016-84ae-59fff5fe1616",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 65804,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 962,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "wcm5KOGybxT3CDBGUXZQQ",
          "ctx": null,
          "_testId": "urn:uuid:a84ff50c-2b6c-4a12-9016-57ba818c6973",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 66819,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 1015,
          "state": "passed",
          "speed": "slow"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 150000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "w1T3VAN6lI8WjfRwYtETS",
      "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
      "matrix": true,
      "report": true,
      "implemented": [
        "tbd"
      ],
      "rowLabel": "Test Name",
      "columnLabel": "Implementation",
      "_testId": "urn:uuid:b0a171a9-a369-4f50-a384-78926cc89605"
    },
    {
      "title": "JsonSchema â€“ JSON Schema Draft-7",
      "ctx": null,
      "suites": [
        {
          "title": "tbd",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "udRcGOvuPG7iOUn2zvgjc",
              "ctx": null,
              "_testId": "urn:uuid:dc8751d1-cbc2-4d77-ad23-95a62b2c9be7",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 67804,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential."
              },
              "duration": 1789,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2.1 The type property MUST be JsonSchema.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "udRcGOvuPG7iOUn2zvgjc",
              "ctx": null,
              "_testId": "urn:uuid:b766c1eb-c29f-44bf-9107-84972cf502d4",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 69542,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.1 The type property MUST be JsonSchema."
              },
              "duration": 1752,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes",
              "body": "function() {\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          if (schemaVersionName === JsonSchemaVersions['202012']) {\n            should.equal(true, true);\n          } else {\n            this.skip();\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "udRcGOvuPG7iOUn2zvgjc",
              "ctx": null,
              "_testId": "urn:uuid:5d26afcc-4b92-4a4c-a11e-59828adac6ee",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "tbd",
                "rowId": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes"
              },
              "duration": 0,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "udRcGOvuPG7iOUn2zvgjc",
              "ctx": null,
              "_testId": "urn:uuid:be797831-e231-4cdd-8ccf-0b61a98b01e5",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 71312,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference"
              },
              "duration": 2518,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3.1.2, 4 The $schema property MUST be present in each schema",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "udRcGOvuPG7iOUn2zvgjc",
              "ctx": null,
              "_testId": "urn:uuid:30c7a393-6541-4618-a17c-6fae462e87c9",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 73778,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "3.1.2, 4 The $schema property MUST be present in each schema"
              },
              "duration": 1703,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "udRcGOvuPG7iOUn2zvgjc",
              "ctx": null,
              "_testId": "urn:uuid:5b07772b-56a9-404b-9d0e-1e9fe0eac39b",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 75545,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 964,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "udRcGOvuPG7iOUn2zvgjc",
              "ctx": null,
              "_testId": "urn:uuid:8dec1f9c-b9e2-4ce3-8b63-81a759c3a88c",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 76483,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 938,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "udRcGOvuPG7iOUn2zvgjc",
              "ctx": null,
              "_testId": "urn:uuid:93201b14-cd87-4361-9679-7cada091384d",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 77429,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 946,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 150000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "8ElAfWpTOzQhRSbkABpAo",
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "_testId": "urn:uuid:44acff22-175f-4e1e-a2db-e9a72a97c845"
        }
      ],
      "tests": [
        {
          "type": "test",
          "title": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "udRcGOvuPG7iOUn2zvgjc",
          "ctx": null,
          "_testId": "urn:uuid:dc8751d1-cbc2-4d77-ad23-95a62b2c9be7",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 67804,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential."
          },
          "duration": 1789,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "2.1 The type property MUST be JsonSchema.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "udRcGOvuPG7iOUn2zvgjc",
          "ctx": null,
          "_testId": "urn:uuid:b766c1eb-c29f-44bf-9107-84972cf502d4",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 69542,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.1 The type property MUST be JsonSchema."
          },
          "duration": 1752,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes",
          "body": "function() {\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          if (schemaVersionName === JsonSchemaVersions['202012']) {\n            should.equal(true, true);\n          } else {\n            this.skip();\n          }\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": true,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "udRcGOvuPG7iOUn2zvgjc",
          "ctx": null,
          "_testId": "urn:uuid:5d26afcc-4b92-4a4c-a11e-59828adac6ee",
          "_events": {},
          "_eventsCount": 1,
          "cell": {
            "columnId": "tbd",
            "rowId": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes"
          },
          "duration": 0,
          "state": "pending"
        },
        {
          "type": "test",
          "title": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "udRcGOvuPG7iOUn2zvgjc",
          "ctx": null,
          "_testId": "urn:uuid:be797831-e231-4cdd-8ccf-0b61a98b01e5",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 71312,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference"
          },
          "duration": 2518,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "3.1.2, 4 The $schema property MUST be present in each schema",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "udRcGOvuPG7iOUn2zvgjc",
          "ctx": null,
          "_testId": "urn:uuid:30c7a393-6541-4618-a17c-6fae462e87c9",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 73778,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "3.1.2, 4 The $schema property MUST be present in each schema"
          },
          "duration": 1703,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "udRcGOvuPG7iOUn2zvgjc",
          "ctx": null,
          "_testId": "urn:uuid:5b07772b-56a9-404b-9d0e-1e9fe0eac39b",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 75545,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 964,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "udRcGOvuPG7iOUn2zvgjc",
          "ctx": null,
          "_testId": "urn:uuid:8dec1f9c-b9e2-4ce3-8b63-81a759c3a88c",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 76483,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 938,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "udRcGOvuPG7iOUn2zvgjc",
          "ctx": null,
          "_testId": "urn:uuid:93201b14-cd87-4361-9679-7cada091384d",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 77429,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 946,
          "state": "passed",
          "speed": "slow"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 150000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "w1T3VAN6lI8WjfRwYtETS",
      "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
      "matrix": true,
      "report": true,
      "implemented": [
        "tbd"
      ],
      "rowLabel": "Test Name",
      "columnLabel": "Implementation",
      "_testId": "urn:uuid:2751e535-5ed5-4108-b0a9-65de991f93e1"
    },
    {
      "title": "JsonSchemaCredential â€“ JSON Schema 2019-09",
      "ctx": null,
      "suites": [
        {
          "title": "tbd",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "uN0910Zz2Hn71s1wqjBPr",
              "ctx": null,
              "_testId": "urn:uuid:06f7f177-d807-41ed-bd13-671bc95e9fa1",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 78374,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential."
              },
              "duration": 1790,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2.1 The type property MUST be JsonSchemaCredential.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "uN0910Zz2Hn71s1wqjBPr",
              "ctx": null,
              "_testId": "urn:uuid:b71febf8-7ade-401e-a44d-123047a67e4c",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 80204,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.1 The type property MUST be JsonSchemaCredential."
              },
              "duration": 1794,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2.2 The credentialSubject property MUST contain two properties: type - the value of which MUST be JsonSchema; jsonSchema - an object which contains a valid JSON Schema",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "uN0910Zz2Hn71s1wqjBPr",
              "ctx": null,
              "_testId": "urn:uuid:5e47d503-dd3a-43de-affa-42c72e06169b",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 81972,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.2 The credentialSubject property MUST contain two properties: type - the value of which MUST be JsonSchema; jsonSchema - an object which contains a valid JSON Schema"
              },
              "duration": 3414,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2.2 The value of the credentialSchema property MUST always be set to [known json schema]",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "uN0910Zz2Hn71s1wqjBPr",
              "ctx": null,
              "_testId": "urn:uuid:4bb58141-0897-4094-8ded-6aba1577659b",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 85420,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.2 The value of the credentialSchema property MUST always be set to [known json schema]"
              },
              "duration": 1829,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes",
              "body": "async function() {\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          if (schemaVersionName === JsonSchemaVersions['202012']) {\n            should.equal(true, true);\n          } else {\n            this.skip();\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "uN0910Zz2Hn71s1wqjBPr",
              "ctx": null,
              "_testId": "urn:uuid:0330caf2-109b-481a-9fa2-8c9121a09002",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "tbd",
                "rowId": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 86408,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "uN0910Zz2Hn71s1wqjBPr",
              "ctx": null,
              "_testId": "urn:uuid:81c1da9a-eb80-4fd7-8ccd-0656acb2dd1e",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 87228,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference"
              },
              "duration": 2592,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3.1.2, 4 The $schema property MUST be present in each schema",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "uN0910Zz2Hn71s1wqjBPr",
              "ctx": null,
              "_testId": "urn:uuid:c94d00da-1372-4cac-8d02-c035a4ebbc20",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 89806,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "3.1.2, 4 The $schema property MUST be present in each schema"
              },
              "duration": 1764,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "uN0910Zz2Hn71s1wqjBPr",
              "ctx": null,
              "_testId": "urn:uuid:74ba3dfd-9fb7-405c-af8b-905306632deb",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 91556,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 942,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "uN0910Zz2Hn71s1wqjBPr",
              "ctx": null,
              "_testId": "urn:uuid:f407d2f6-2a24-4cc4-9ab4-41700ed5f5e9",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 92508,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 952,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "uN0910Zz2Hn71s1wqjBPr",
              "ctx": null,
              "_testId": "urn:uuid:4c9448b0-bb47-44b7-bf57-7a57ef0e113e",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 93458,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 950,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 150000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "yfL56zFPK4K6oOvJXgpVY",
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "_testId": "urn:uuid:521b64c7-98e4-458a-bcef-a22f6206fef3"
        }
      ],
      "tests": [
        {
          "type": "test",
          "title": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "uN0910Zz2Hn71s1wqjBPr",
          "ctx": null,
          "_testId": "urn:uuid:06f7f177-d807-41ed-bd13-671bc95e9fa1",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 78374,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential."
          },
          "duration": 1790,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "2.1 The type property MUST be JsonSchemaCredential.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "uN0910Zz2Hn71s1wqjBPr",
          "ctx": null,
          "_testId": "urn:uuid:b71febf8-7ade-401e-a44d-123047a67e4c",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 80204,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.1 The type property MUST be JsonSchemaCredential."
          },
          "duration": 1794,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "2.2 The credentialSubject property MUST contain two properties: type - the value of which MUST be JsonSchema; jsonSchema - an object which contains a valid JSON Schema",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "uN0910Zz2Hn71s1wqjBPr",
          "ctx": null,
          "_testId": "urn:uuid:5e47d503-dd3a-43de-affa-42c72e06169b",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 81972,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.2 The credentialSubject property MUST contain two properties: type - the value of which MUST be JsonSchema; jsonSchema - an object which contains a valid JSON Schema"
          },
          "duration": 3414,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "2.2 The value of the credentialSchema property MUST always be set to [known json schema]",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "uN0910Zz2Hn71s1wqjBPr",
          "ctx": null,
          "_testId": "urn:uuid:4bb58141-0897-4094-8ded-6aba1577659b",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 85420,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.2 The value of the credentialSchema property MUST always be set to [known json schema]"
          },
          "duration": 1829,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes",
          "body": "async function() {\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          if (schemaVersionName === JsonSchemaVersions['202012']) {\n            should.equal(true, true);\n          } else {\n            this.skip();\n          }\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": true,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "uN0910Zz2Hn71s1wqjBPr",
          "ctx": null,
          "_testId": "urn:uuid:0330caf2-109b-481a-9fa2-8c9121a09002",
          "_events": {},
          "_eventsCount": 1,
          "cell": {
            "columnId": "tbd",
            "rowId": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes"
          },
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 86408,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 1,
          "state": "pending"
        },
        {
          "type": "test",
          "title": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "uN0910Zz2Hn71s1wqjBPr",
          "ctx": null,
          "_testId": "urn:uuid:81c1da9a-eb80-4fd7-8ccd-0656acb2dd1e",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 87228,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference"
          },
          "duration": 2592,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "3.1.2, 4 The $schema property MUST be present in each schema",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "uN0910Zz2Hn71s1wqjBPr",
          "ctx": null,
          "_testId": "urn:uuid:c94d00da-1372-4cac-8d02-c035a4ebbc20",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 89806,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "3.1.2, 4 The $schema property MUST be present in each schema"
          },
          "duration": 1764,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "uN0910Zz2Hn71s1wqjBPr",
          "ctx": null,
          "_testId": "urn:uuid:74ba3dfd-9fb7-405c-af8b-905306632deb",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 91556,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 942,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "uN0910Zz2Hn71s1wqjBPr",
          "ctx": null,
          "_testId": "urn:uuid:f407d2f6-2a24-4cc4-9ab4-41700ed5f5e9",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 92508,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 952,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "uN0910Zz2Hn71s1wqjBPr",
          "ctx": null,
          "_testId": "urn:uuid:4c9448b0-bb47-44b7-bf57-7a57ef0e113e",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 93458,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 950,
          "state": "passed",
          "speed": "slow"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 150000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "w1T3VAN6lI8WjfRwYtETS",
      "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
      "matrix": true,
      "report": true,
      "implemented": [
        "tbd"
      ],
      "rowLabel": "Test Name",
      "columnLabel": "Implementation",
      "_testId": "urn:uuid:5b1c2271-64fd-474b-b694-d80cb492b84f"
    },
    {
      "title": "JsonSchemaCredential â€“ JSON Schema 2020-12",
      "ctx": null,
      "suites": [
        {
          "title": "tbd",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "oXQ9SPTUJuYuJEvefQj__",
              "ctx": null,
              "_testId": "urn:uuid:d3566aee-b369-4db5-bad0-ec5cd3a7e019",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 94426,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential."
              },
              "duration": 1751,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2.1 The type property MUST be JsonSchemaCredential.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "oXQ9SPTUJuYuJEvefQj__",
              "ctx": null,
              "_testId": "urn:uuid:7bd72984-d94f-4cd5-a0b7-fcad58b78b7e",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 96149,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.1 The type property MUST be JsonSchemaCredential."
              },
              "duration": 1747,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2.2 The credentialSubject property MUST contain two properties: type - the value of which MUST be JsonSchema; jsonSchema - an object which contains a valid JSON Schema",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "oXQ9SPTUJuYuJEvefQj__",
              "ctx": null,
              "_testId": "urn:uuid:e249195c-fe2e-40a9-8be7-2e51c5bd6cba",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 97905,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.2 The credentialSubject property MUST contain two properties: type - the value of which MUST be JsonSchema; jsonSchema - an object which contains a valid JSON Schema"
              },
              "duration": 3382,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2.2 The value of the credentialSchema property MUST always be set to [known json schema]",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "oXQ9SPTUJuYuJEvefQj__",
              "ctx": null,
              "_testId": "urn:uuid:34b1ff2f-19d4-4b55-83e1-56aca1a182ad",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 101286,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.2 The value of the credentialSchema property MUST always be set to [known json schema]"
              },
              "duration": 1730,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes",
              "body": "async function() {\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          if (schemaVersionName === JsonSchemaVersions['202012']) {\n            should.equal(true, true);\n          } else {\n            this.skip();\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "oXQ9SPTUJuYuJEvefQj__",
              "ctx": null,
              "_testId": "urn:uuid:b713b199-2606-4c45-8a8f-e272719ab1ee",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "tbd",
                "rowId": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 102219,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "oXQ9SPTUJuYuJEvefQj__",
              "ctx": null,
              "_testId": "urn:uuid:205ac9ff-9392-40d2-9c5d-3345f7d80e9a",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 103012,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference"
              },
              "duration": 2576,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3.1.2, 4 The $schema property MUST be present in each schema",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "oXQ9SPTUJuYuJEvefQj__",
              "ctx": null,
              "_testId": "urn:uuid:57a555d4-955a-4078-b28e-f585096d5e91",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 105609,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "3.1.2, 4 The $schema property MUST be present in each schema"
              },
              "duration": 1766,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "oXQ9SPTUJuYuJEvefQj__",
              "ctx": null,
              "_testId": "urn:uuid:c925e231-39b4-4c6d-b46d-060840ad5c46",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 107376,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 964,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "oXQ9SPTUJuYuJEvefQj__",
              "ctx": null,
              "_testId": "urn:uuid:e490b044-f8da-4165-8603-ef27ea67848b",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 108324,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 948,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "oXQ9SPTUJuYuJEvefQj__",
              "ctx": null,
              "_testId": "urn:uuid:389d2519-426a-4b35-b7ab-1ee84bdf08d2",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 109276,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 953,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 150000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "Y-F0GCAJLmv0g0cFc9_g6",
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "_testId": "urn:uuid:7fd014e2-7414-455a-ba45-20a1da9dc6e9"
        }
      ],
      "tests": [
        {
          "type": "test",
          "title": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "oXQ9SPTUJuYuJEvefQj__",
          "ctx": null,
          "_testId": "urn:uuid:d3566aee-b369-4db5-bad0-ec5cd3a7e019",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 94426,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential."
          },
          "duration": 1751,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "2.1 The type property MUST be JsonSchemaCredential.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "oXQ9SPTUJuYuJEvefQj__",
          "ctx": null,
          "_testId": "urn:uuid:7bd72984-d94f-4cd5-a0b7-fcad58b78b7e",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 96149,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.1 The type property MUST be JsonSchemaCredential."
          },
          "duration": 1747,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "2.2 The credentialSubject property MUST contain two properties: type - the value of which MUST be JsonSchema; jsonSchema - an object which contains a valid JSON Schema",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "oXQ9SPTUJuYuJEvefQj__",
          "ctx": null,
          "_testId": "urn:uuid:e249195c-fe2e-40a9-8be7-2e51c5bd6cba",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 97905,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.2 The credentialSubject property MUST contain two properties: type - the value of which MUST be JsonSchema; jsonSchema - an object which contains a valid JSON Schema"
          },
          "duration": 3382,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "2.2 The value of the credentialSchema property MUST always be set to [known json schema]",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "oXQ9SPTUJuYuJEvefQj__",
          "ctx": null,
          "_testId": "urn:uuid:34b1ff2f-19d4-4b55-83e1-56aca1a182ad",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 101286,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.2 The value of the credentialSchema property MUST always be set to [known json schema]"
          },
          "duration": 1730,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes",
          "body": "async function() {\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          if (schemaVersionName === JsonSchemaVersions['202012']) {\n            should.equal(true, true);\n          } else {\n            this.skip();\n          }\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "oXQ9SPTUJuYuJEvefQj__",
          "ctx": null,
          "_testId": "urn:uuid:b713b199-2606-4c45-8a8f-e272719ab1ee",
          "_events": {},
          "_eventsCount": 1,
          "cell": {
            "columnId": "tbd",
            "rowId": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes"
          },
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 102219,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 0,
          "state": "passed",
          "speed": "fast"
        },
        {
          "type": "test",
          "title": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "oXQ9SPTUJuYuJEvefQj__",
          "ctx": null,
          "_testId": "urn:uuid:205ac9ff-9392-40d2-9c5d-3345f7d80e9a",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 103012,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference"
          },
          "duration": 2576,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "3.1.2, 4 The $schema property MUST be present in each schema",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "oXQ9SPTUJuYuJEvefQj__",
          "ctx": null,
          "_testId": "urn:uuid:57a555d4-955a-4078-b28e-f585096d5e91",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 105609,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "3.1.2, 4 The $schema property MUST be present in each schema"
          },
          "duration": 1766,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "oXQ9SPTUJuYuJEvefQj__",
          "ctx": null,
          "_testId": "urn:uuid:c925e231-39b4-4c6d-b46d-060840ad5c46",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 107376,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 964,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "oXQ9SPTUJuYuJEvefQj__",
          "ctx": null,
          "_testId": "urn:uuid:e490b044-f8da-4165-8603-ef27ea67848b",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 108324,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 948,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "oXQ9SPTUJuYuJEvefQj__",
          "ctx": null,
          "_testId": "urn:uuid:389d2519-426a-4b35-b7ab-1ee84bdf08d2",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 109276,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 953,
          "state": "passed",
          "speed": "slow"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 150000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "w1T3VAN6lI8WjfRwYtETS",
      "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
      "matrix": true,
      "report": true,
      "implemented": [
        "tbd"
      ],
      "rowLabel": "Test Name",
      "columnLabel": "Implementation",
      "_testId": "urn:uuid:bbf3884d-0ae5-47ed-9142-14aa3f7651a7"
    },
    {
      "title": "JsonSchemaCredential â€“ JSON Schema Draft-7",
      "ctx": null,
      "suites": [
        {
          "title": "tbd",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "hq103au2xmWMyQSAMGgpA",
              "ctx": null,
              "_testId": "urn:uuid:8e72f234-9598-4435-bf52-a29c5add8dbf",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 110237,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential."
              },
              "duration": 1782,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2.1 The type property MUST be JsonSchemaCredential.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "hq103au2xmWMyQSAMGgpA",
              "ctx": null,
              "_testId": "urn:uuid:be54eb35-6699-4fd3-a047-744500f0e1d5",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 112026,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.1 The type property MUST be JsonSchemaCredential."
              },
              "duration": 1764,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2.2 The credentialSubject property MUST contain two properties: type - the value of which MUST be JsonSchema; jsonSchema - an object which contains a valid JSON Schema",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "hq103au2xmWMyQSAMGgpA",
              "ctx": null,
              "_testId": "urn:uuid:0f3108b8-e187-42ff-8758-120035d08abe",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 113766,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.2 The credentialSubject property MUST contain two properties: type - the value of which MUST be JsonSchema; jsonSchema - an object which contains a valid JSON Schema"
              },
              "duration": 3355,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2.2 The value of the credentialSchema property MUST always be set to [known json schema]",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "hq103au2xmWMyQSAMGgpA",
              "ctx": null,
              "_testId": "urn:uuid:4faf830d-265a-40c4-8304-4fd237d27ecd",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 117158,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.2 The value of the credentialSchema property MUST always be set to [known json schema]"
              },
              "duration": 1803,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes",
              "body": "async function() {\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          if (schemaVersionName === JsonSchemaVersions['202012']) {\n            should.equal(true, true);\n          } else {\n            this.skip();\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "hq103au2xmWMyQSAMGgpA",
              "ctx": null,
              "_testId": "urn:uuid:aa9da680-3449-43c4-a04c-ce7fb1213a6b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "tbd",
                "rowId": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 118131,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "hq103au2xmWMyQSAMGgpA",
              "ctx": null,
              "_testId": "urn:uuid:af2e371c-7c1f-4e2a-868a-aa626bec1dbe",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 118922,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference"
              },
              "duration": 2540,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3.1.2, 4 The $schema property MUST be present in each schema",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "hq103au2xmWMyQSAMGgpA",
              "ctx": null,
              "_testId": "urn:uuid:c559eb1a-cef7-45f5-8afc-35406bd1e7e8",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 121488,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "3.1.2, 4 The $schema property MUST be present in each schema"
              },
              "duration": 1767,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "hq103au2xmWMyQSAMGgpA",
              "ctx": null,
              "_testId": "urn:uuid:3fc279a4-821a-476e-8f75-e074b664f371",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 123231,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 943,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "hq103au2xmWMyQSAMGgpA",
              "ctx": null,
              "_testId": "urn:uuid:19b4bc83-34dd-49c5-803b-1e476b6a759c",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 124186,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 955,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "hq103au2xmWMyQSAMGgpA",
              "ctx": null,
              "_testId": "urn:uuid:aaee9129-4518-448f-a545-7c91f89910b0",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 125129,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 943,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 150000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "wZR-cZsQiBtfAUq7u5Zgz",
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "_testId": "urn:uuid:b2798941-d35e-4e94-bd55-b06596ba2cbb"
        }
      ],
      "tests": [
        {
          "type": "test",
          "title": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "hq103au2xmWMyQSAMGgpA",
          "ctx": null,
          "_testId": "urn:uuid:8e72f234-9598-4435-bf52-a29c5add8dbf",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 110237,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential."
          },
          "duration": 1782,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "2.1 The type property MUST be JsonSchemaCredential.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "hq103au2xmWMyQSAMGgpA",
          "ctx": null,
          "_testId": "urn:uuid:be54eb35-6699-4fd3-a047-744500f0e1d5",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 112026,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.1 The type property MUST be JsonSchemaCredential."
          },
          "duration": 1764,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "2.2 The credentialSubject property MUST contain two properties: type - the value of which MUST be JsonSchema; jsonSchema - an object which contains a valid JSON Schema",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "hq103au2xmWMyQSAMGgpA",
          "ctx": null,
          "_testId": "urn:uuid:0f3108b8-e187-42ff-8758-120035d08abe",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 113766,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.2 The credentialSubject property MUST contain two properties: type - the value of which MUST be JsonSchema; jsonSchema - an object which contains a valid JSON Schema"
          },
          "duration": 3355,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "2.2 The value of the credentialSchema property MUST always be set to [known json schema]",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "hq103au2xmWMyQSAMGgpA",
          "ctx": null,
          "_testId": "urn:uuid:4faf830d-265a-40c4-8304-4fd237d27ecd",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 117158,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.2 The value of the credentialSchema property MUST always be set to [known json schema]"
          },
          "duration": 1803,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes",
          "body": "async function() {\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          if (schemaVersionName === JsonSchemaVersions['202012']) {\n            should.equal(true, true);\n          } else {\n            this.skip();\n          }\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": true,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "hq103au2xmWMyQSAMGgpA",
          "ctx": null,
          "_testId": "urn:uuid:aa9da680-3449-43c4-a04c-ce7fb1213a6b",
          "_events": {},
          "_eventsCount": 1,
          "cell": {
            "columnId": "tbd",
            "rowId": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes"
          },
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 118131,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 0,
          "state": "pending"
        },
        {
          "type": "test",
          "title": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "hq103au2xmWMyQSAMGgpA",
          "ctx": null,
          "_testId": "urn:uuid:af2e371c-7c1f-4e2a-868a-aa626bec1dbe",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 118922,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference"
          },
          "duration": 2540,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "3.1.2, 4 The $schema property MUST be present in each schema",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "hq103au2xmWMyQSAMGgpA",
          "ctx": null,
          "_testId": "urn:uuid:c559eb1a-cef7-45f5-8afc-35406bd1e7e8",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 121488,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "3.1.2, 4 The $schema property MUST be present in each schema"
          },
          "duration": 1767,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "hq103au2xmWMyQSAMGgpA",
          "ctx": null,
          "_testId": "urn:uuid:3fc279a4-821a-476e-8f75-e074b664f371",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 123231,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 943,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "hq103au2xmWMyQSAMGgpA",
          "ctx": null,
          "_testId": "urn:uuid:19b4bc83-34dd-49c5-803b-1e476b6a759c",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 124186,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 955,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "hq103au2xmWMyQSAMGgpA",
          "ctx": null,
          "_testId": "urn:uuid:aaee9129-4518-448f-a545-7c91f89910b0",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 125129,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 943,
          "state": "passed",
          "speed": "slow"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 150000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "w1T3VAN6lI8WjfRwYtETS",
      "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
      "matrix": true,
      "report": true,
      "implemented": [
        "tbd"
      ],
      "rowLabel": "Test Name",
      "columnLabel": "Implementation",
      "_testId": "urn:uuid:d82e5b93-9595-4db8-8f5d-4127ce62fbc5"
    }
  ],
  "tests": [],
  "root": true,
  "pending": false,
  "_retries": -1,
  "_beforeEach": [],
  "_beforeAll": [],
  "_afterEach": [],
  "_afterAll": [],
  "_timeout": 150000,
  "_slow": 75,
  "_bail": false,
  "_onlyTests": [],
  "_onlySuites": [],
  "delayed": false,
  "_events": {
    "pre-require": [
      null,
      null
    ]
  },
  "_eventsCount": 1,
  "_testId": "urn:uuid:2347cbec-2d8a-4f73-ad38-4ccd9dec21b6"
}