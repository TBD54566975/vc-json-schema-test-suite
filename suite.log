{
  "title": "",
  "ctx": null,
  "suites": [
    {
      "title": "JsonSchema â€“ JSON Schema 2019-09",
      "ctx": null,
      "suites": [
        {
          "title": "tbd",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "P97EjnUqnjBUl2THIfXjy",
              "ctx": null,
              "_testId": "urn:uuid:e1a04bb4-88e0-4fe1-9a81-903893ad81ea",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 48456,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential."
              },
              "duration": 49138,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2.1 The type property MUST be JsonSchema.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "P97EjnUqnjBUl2THIfXjy",
              "ctx": null,
              "_testId": "urn:uuid:a77cef54-ab4a-463d-9d29-15371f48efd3",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 50143,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.1 The type property MUST be JsonSchema."
              },
              "duration": 1691,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes",
              "body": "function() {\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          if (schemaVersionName === JsonSchemaVersions['202012']) {\n            should.equal(true, true);\n          } else {\n            this.skip();\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "P97EjnUqnjBUl2THIfXjy",
              "ctx": null,
              "_testId": "urn:uuid:702b69cf-be3c-4127-acbd-9819df7053de",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "tbd",
                "rowId": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes"
              },
              "duration": 0,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "P97EjnUqnjBUl2THIfXjy",
              "ctx": null,
              "_testId": "urn:uuid:37e8dec2-97db-40a6-aa4f-abadab820d6a",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 51852,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference"
              },
              "duration": 2506,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3.1.2, 4 The $schema property MUST be present in each schema",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "P97EjnUqnjBUl2THIfXjy",
              "ctx": null,
              "_testId": "urn:uuid:c6e9a0b5-e02b-47cb-9c14-a1227bd8325b",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 54356,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "3.1.2, 4 The $schema property MUST be present in each schema"
              },
              "duration": 1703,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "P97EjnUqnjBUl2THIfXjy",
              "ctx": null,
              "_testId": "urn:uuid:0110ede9-e55e-4e55-9e37-51b90b8cf94b",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 56072,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 935,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "P97EjnUqnjBUl2THIfXjy",
              "ctx": null,
              "_testId": "urn:uuid:3896d5a3-2b8d-4a1c-b502-21255d275bad",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 56984,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 911,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "P97EjnUqnjBUl2THIfXjy",
              "ctx": null,
              "_testId": "urn:uuid:088dd463-e4ac-4f57-b539-b4e0d5cd96d3",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57900,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 915,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 150000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "yJ0mr9L6Etphxirtl5ywu",
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "_testId": "urn:uuid:b2ce4375-48a8-4345-a51c-447f600cb901"
        }
      ],
      "tests": [
        {
          "type": "test",
          "title": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "P97EjnUqnjBUl2THIfXjy",
          "ctx": null,
          "_testId": "urn:uuid:e1a04bb4-88e0-4fe1-9a81-903893ad81ea",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 48456,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential."
          },
          "duration": 49138,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "2.1 The type property MUST be JsonSchema.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "P97EjnUqnjBUl2THIfXjy",
          "ctx": null,
          "_testId": "urn:uuid:a77cef54-ab4a-463d-9d29-15371f48efd3",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 50143,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.1 The type property MUST be JsonSchema."
          },
          "duration": 1691,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes",
          "body": "function() {\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          if (schemaVersionName === JsonSchemaVersions['202012']) {\n            should.equal(true, true);\n          } else {\n            this.skip();\n          }\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": true,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "P97EjnUqnjBUl2THIfXjy",
          "ctx": null,
          "_testId": "urn:uuid:702b69cf-be3c-4127-acbd-9819df7053de",
          "_events": {},
          "_eventsCount": 1,
          "cell": {
            "columnId": "tbd",
            "rowId": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes"
          },
          "duration": 0,
          "state": "pending"
        },
        {
          "type": "test",
          "title": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "P97EjnUqnjBUl2THIfXjy",
          "ctx": null,
          "_testId": "urn:uuid:37e8dec2-97db-40a6-aa4f-abadab820d6a",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 51852,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference"
          },
          "duration": 2506,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "3.1.2, 4 The $schema property MUST be present in each schema",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "P97EjnUqnjBUl2THIfXjy",
          "ctx": null,
          "_testId": "urn:uuid:c6e9a0b5-e02b-47cb-9c14-a1227bd8325b",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 54356,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "3.1.2, 4 The $schema property MUST be present in each schema"
          },
          "duration": 1703,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "P97EjnUqnjBUl2THIfXjy",
          "ctx": null,
          "_testId": "urn:uuid:0110ede9-e55e-4e55-9e37-51b90b8cf94b",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 56072,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 935,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "P97EjnUqnjBUl2THIfXjy",
          "ctx": null,
          "_testId": "urn:uuid:3896d5a3-2b8d-4a1c-b502-21255d275bad",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 56984,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 911,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "P97EjnUqnjBUl2THIfXjy",
          "ctx": null,
          "_testId": "urn:uuid:088dd463-e4ac-4f57-b539-b4e0d5cd96d3",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 57900,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 915,
          "state": "passed",
          "speed": "slow"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 150000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "Xcd-xDURP-2z3DYI2fIMv",
      "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
      "matrix": true,
      "report": true,
      "implemented": [
        "tbd"
      ],
      "rowLabel": "Test Name",
      "columnLabel": "Implementation",
      "_testId": "urn:uuid:055f1b23-a401-490e-8e6c-6ff5e636eeb2"
    },
    {
      "title": "JsonSchema â€“ JSON Schema 2020-12",
      "ctx": null,
      "suites": [
        {
          "title": "tbd",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "2mRr6X2WQj0DyFmRG--QX",
              "ctx": null,
              "_testId": "urn:uuid:c19138dc-cd90-47ff-a50d-cd3f62e970f5",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 58813,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential."
              },
              "duration": 1679,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2.1 The type property MUST be JsonSchema.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "2mRr6X2WQj0DyFmRG--QX",
              "ctx": null,
              "_testId": "urn:uuid:15b08ba9-ffa9-482f-af34-0ce2488de140",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 60507,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.1 The type property MUST be JsonSchema."
              },
              "duration": 1720,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes",
              "body": "function() {\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          if (schemaVersionName === JsonSchemaVersions['202012']) {\n            should.equal(true, true);\n          } else {\n            this.skip();\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "2mRr6X2WQj0DyFmRG--QX",
              "ctx": null,
              "_testId": "urn:uuid:f226544e-95a6-4549-b329-6c6571429814",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "tbd",
                "rowId": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes"
              },
              "duration": 0,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "2mRr6X2WQj0DyFmRG--QX",
              "ctx": null,
              "_testId": "urn:uuid:dd657cdd-3bdf-4e40-b7f5-bab166ed1cd1",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 62234,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference"
              },
              "duration": 2540,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3.1.2, 4 The $schema property MUST be present in each schema",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "2mRr6X2WQj0DyFmRG--QX",
              "ctx": null,
              "_testId": "urn:uuid:2f68ce50-d9aa-4998-a8b8-791baf1ecd53",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 64757,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "3.1.2, 4 The $schema property MUST be present in each schema"
              },
              "duration": 1685,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "2mRr6X2WQj0DyFmRG--QX",
              "ctx": null,
              "_testId": "urn:uuid:da9fef1f-3d3d-45e0-8dfe-3e6bc4021471",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 66437,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 910,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "2mRr6X2WQj0DyFmRG--QX",
              "ctx": null,
              "_testId": "urn:uuid:37fbe25f-a87f-4024-99ac-eae69246a0b8",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 67347,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 909,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "2mRr6X2WQj0DyFmRG--QX",
              "ctx": null,
              "_testId": "urn:uuid:77ab486b-401e-4b2e-9d07-7243efdcb1f3",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 68269,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 921,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 150000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "Jmzd-7swoAWRtJY-gAypP",
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "_testId": "urn:uuid:7639710c-03c6-4783-9348-257c0a28207f"
        }
      ],
      "tests": [
        {
          "type": "test",
          "title": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "2mRr6X2WQj0DyFmRG--QX",
          "ctx": null,
          "_testId": "urn:uuid:c19138dc-cd90-47ff-a50d-cd3f62e970f5",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 58813,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential."
          },
          "duration": 1679,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "2.1 The type property MUST be JsonSchema.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "2mRr6X2WQj0DyFmRG--QX",
          "ctx": null,
          "_testId": "urn:uuid:15b08ba9-ffa9-482f-af34-0ce2488de140",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 60507,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.1 The type property MUST be JsonSchema."
          },
          "duration": 1720,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes",
          "body": "function() {\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          if (schemaVersionName === JsonSchemaVersions['202012']) {\n            should.equal(true, true);\n          } else {\n            this.skip();\n          }\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "2mRr6X2WQj0DyFmRG--QX",
          "ctx": null,
          "_testId": "urn:uuid:f226544e-95a6-4549-b329-6c6571429814",
          "_events": {},
          "_eventsCount": 1,
          "cell": {
            "columnId": "tbd",
            "rowId": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes"
          },
          "duration": 0,
          "state": "passed",
          "speed": "fast"
        },
        {
          "type": "test",
          "title": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "2mRr6X2WQj0DyFmRG--QX",
          "ctx": null,
          "_testId": "urn:uuid:dd657cdd-3bdf-4e40-b7f5-bab166ed1cd1",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 62234,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference"
          },
          "duration": 2540,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "3.1.2, 4 The $schema property MUST be present in each schema",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "2mRr6X2WQj0DyFmRG--QX",
          "ctx": null,
          "_testId": "urn:uuid:2f68ce50-d9aa-4998-a8b8-791baf1ecd53",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 64757,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "3.1.2, 4 The $schema property MUST be present in each schema"
          },
          "duration": 1685,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "2mRr6X2WQj0DyFmRG--QX",
          "ctx": null,
          "_testId": "urn:uuid:da9fef1f-3d3d-45e0-8dfe-3e6bc4021471",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 66437,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 910,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "2mRr6X2WQj0DyFmRG--QX",
          "ctx": null,
          "_testId": "urn:uuid:37fbe25f-a87f-4024-99ac-eae69246a0b8",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 67347,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 909,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "2mRr6X2WQj0DyFmRG--QX",
          "ctx": null,
          "_testId": "urn:uuid:77ab486b-401e-4b2e-9d07-7243efdcb1f3",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 68269,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 921,
          "state": "passed",
          "speed": "slow"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 150000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "Xcd-xDURP-2z3DYI2fIMv",
      "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
      "matrix": true,
      "report": true,
      "implemented": [
        "tbd"
      ],
      "rowLabel": "Test Name",
      "columnLabel": "Implementation",
      "_testId": "urn:uuid:0df73478-0064-4f68-b238-fe56d7246121"
    },
    {
      "title": "JsonSchema â€“ JSON Schema Draft-7",
      "ctx": null,
      "suites": [
        {
          "title": "tbd",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "OYkqjax4mUjaN23aHZnQ9",
              "ctx": null,
              "_testId": "urn:uuid:ec56ade2-8329-4b24-8dbf-4b9e5af39473",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 69183,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential."
              },
              "duration": 1686,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2.1 The type property MUST be JsonSchema.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "OYkqjax4mUjaN23aHZnQ9",
              "ctx": null,
              "_testId": "urn:uuid:a894e5f5-5442-40c2-9de9-b84bc79d33a7",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 70886,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.1 The type property MUST be JsonSchema."
              },
              "duration": 1693,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes",
              "body": "function() {\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          if (schemaVersionName === JsonSchemaVersions['202012']) {\n            should.equal(true, true);\n          } else {\n            this.skip();\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "OYkqjax4mUjaN23aHZnQ9",
              "ctx": null,
              "_testId": "urn:uuid:02483736-7004-4973-a0a1-38c59f7721bd",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "tbd",
                "rowId": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes"
              },
              "duration": 0,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "OYkqjax4mUjaN23aHZnQ9",
              "ctx": null,
              "_testId": "urn:uuid:cc373a01-e499-4efc-a104-2b770d2dbf52",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 72589,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference"
              },
              "duration": 2535,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3.1.2, 4 The $schema property MUST be present in each schema",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "OYkqjax4mUjaN23aHZnQ9",
              "ctx": null,
              "_testId": "urn:uuid:cf0086a7-dd83-4bc4-89f9-5727374e6852",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 75112,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "3.1.2, 4 The $schema property MUST be present in each schema"
              },
              "duration": 1720,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "OYkqjax4mUjaN23aHZnQ9",
              "ctx": null,
              "_testId": "urn:uuid:4af8bbde-8dc6-4f1a-a76f-c08d0f9d3afc",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 76838,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 930,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "OYkqjax4mUjaN23aHZnQ9",
              "ctx": null,
              "_testId": "urn:uuid:35e96dc8-4877-480e-bb06-3d7bd0188a61",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 77780,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 941,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
              "parent": "OYkqjax4mUjaN23aHZnQ9",
              "ctx": null,
              "_testId": "urn:uuid:7101f02d-8166-497e-a1c4-1151df1de6c8",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 78723,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 942,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 150000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "AINBGQGIRlOfdKB_KMnrx",
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "_testId": "urn:uuid:b1bf5c73-6fca-4f69-b5f0-9bf8d9bff493"
        }
      ],
      "tests": [
        {
          "type": "test",
          "title": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "OYkqjax4mUjaN23aHZnQ9",
          "ctx": null,
          "_testId": "urn:uuid:ec56ade2-8329-4b24-8dbf-4b9e5af39473",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 69183,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential."
          },
          "duration": 1686,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "2.1 The type property MUST be JsonSchema.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "OYkqjax4mUjaN23aHZnQ9",
          "ctx": null,
          "_testId": "urn:uuid:a894e5f5-5442-40c2-9de9-b84bc79d33a7",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 70886,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.1 The type property MUST be JsonSchema."
          },
          "duration": 1693,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes",
          "body": "function() {\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          if (schemaVersionName === JsonSchemaVersions['202012']) {\n            should.equal(true, true);\n          } else {\n            this.skip();\n          }\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": true,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "OYkqjax4mUjaN23aHZnQ9",
          "ctx": null,
          "_testId": "urn:uuid:02483736-7004-4973-a0a1-38c59f7721bd",
          "_events": {},
          "_eventsCount": 1,
          "cell": {
            "columnId": "tbd",
            "rowId": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes"
          },
          "duration": 0,
          "state": "pending"
        },
        {
          "type": "test",
          "title": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "OYkqjax4mUjaN23aHZnQ9",
          "ctx": null,
          "_testId": "urn:uuid:cc373a01-e499-4efc-a104-2b770d2dbf52",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 72589,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference"
          },
          "duration": 2535,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "3.1.2, 4 The $schema property MUST be present in each schema",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "OYkqjax4mUjaN23aHZnQ9",
          "ctx": null,
          "_testId": "urn:uuid:cf0086a7-dd83-4bc4-89f9-5727374e6852",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 75112,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "3.1.2, 4 The $schema property MUST be present in each schema"
          },
          "duration": 1720,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "OYkqjax4mUjaN23aHZnQ9",
          "ctx": null,
          "_testId": "urn:uuid:4af8bbde-8dc6-4f1a-a76f-c08d0f9d3afc",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 76838,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 930,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "OYkqjax4mUjaN23aHZnQ9",
          "ctx": null,
          "_testId": "urn:uuid:35e96dc8-4877-480e-bb06-3d7bd0188a61",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 77780,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 941,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
          "parent": "OYkqjax4mUjaN23aHZnQ9",
          "ctx": null,
          "_testId": "urn:uuid:7101f02d-8166-497e-a1c4-1151df1de6c8",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 78723,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 942,
          "state": "passed",
          "speed": "slow"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 150000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "Xcd-xDURP-2z3DYI2fIMv",
      "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschema.js",
      "matrix": true,
      "report": true,
      "implemented": [
        "tbd"
      ],
      "rowLabel": "Test Name",
      "columnLabel": "Implementation",
      "_testId": "urn:uuid:cc1eb248-503a-4f39-9f13-3c1af812eff0"
    },
    {
      "title": "JsonSchemaCredential â€“ JSON Schema 2019-09",
      "ctx": null,
      "suites": [
        {
          "title": "tbd",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "Hf4rJpDhm8xfjASZ058mM",
              "ctx": null,
              "_testId": "urn:uuid:a8f4d5f5-168b-4129-8f5b-8f53f10b0f57",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 79661,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential."
              },
              "duration": 1725,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2.1 The type property MUST be JsonSchemaCredential.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "Hf4rJpDhm8xfjASZ058mM",
              "ctx": null,
              "_testId": "urn:uuid:9cd5a779-5470-4949-8cdc-de18c6164aab",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 81387,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.1 The type property MUST be JsonSchemaCredential."
              },
              "duration": 1719,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2.2 The credentialSubject property MUST contain two properties: type - the value of which MUST be JsonSchema; jsonSchema - an object which contains a valid JSON Schema",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "Hf4rJpDhm8xfjASZ058mM",
              "ctx": null,
              "_testId": "urn:uuid:bc7dcfa1-6071-41f3-ba43-af69b7b651fc",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 83112,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.2 The credentialSubject property MUST contain two properties: type - the value of which MUST be JsonSchema; jsonSchema - an object which contains a valid JSON Schema"
              },
              "duration": 3283,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2.2 The value of the credentialSchema property MUST always be set to [known json schema]",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "Hf4rJpDhm8xfjASZ058mM",
              "ctx": null,
              "_testId": "urn:uuid:689f7853-12cf-421d-a1fb-c542ff87fa5c",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 86395,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.2 The value of the credentialSchema property MUST always be set to [known json schema]"
              },
              "duration": 1742,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes",
              "body": "async function() {\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          if (schemaVersionName === JsonSchemaVersions['202012']) {\n            should.equal(true, true);\n          } else {\n            this.skip();\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "Hf4rJpDhm8xfjASZ058mM",
              "ctx": null,
              "_testId": "urn:uuid:688ced46-0ee3-49e1-88f9-a58dc9f1a195",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "tbd",
                "rowId": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 87346,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "Hf4rJpDhm8xfjASZ058mM",
              "ctx": null,
              "_testId": "urn:uuid:1e2115c6-3258-4a92-9f42-3c8972ff1e0c",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 88140,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference"
              },
              "duration": 2543,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3.1.2, 4 The $schema property MUST be present in each schema",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "Hf4rJpDhm8xfjASZ058mM",
              "ctx": null,
              "_testId": "urn:uuid:aebaa91e-c60a-4e8b-a77e-d0482a97fa04",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 90669,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "3.1.2, 4 The $schema property MUST be present in each schema"
              },
              "duration": 1704,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "Hf4rJpDhm8xfjASZ058mM",
              "ctx": null,
              "_testId": "urn:uuid:1bc349f1-bc0b-4f58-a72d-354cf6863d7e",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 92356,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 911,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "Hf4rJpDhm8xfjASZ058mM",
              "ctx": null,
              "_testId": "urn:uuid:f6211805-5706-4814-ac01-59f757a33fa2",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 93286,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 929,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "Hf4rJpDhm8xfjASZ058mM",
              "ctx": null,
              "_testId": "urn:uuid:edcc9ac2-457b-4f02-a8fb-c7ff353fa43c",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 94221,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 935,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 150000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "PIWUr_AON8yPk2QwXirFi",
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "_testId": "urn:uuid:72edd3b6-22c8-49b8-9203-15aad8458f8c"
        }
      ],
      "tests": [
        {
          "type": "test",
          "title": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "Hf4rJpDhm8xfjASZ058mM",
          "ctx": null,
          "_testId": "urn:uuid:a8f4d5f5-168b-4129-8f5b-8f53f10b0f57",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 79661,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential."
          },
          "duration": 1725,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "2.1 The type property MUST be JsonSchemaCredential.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "Hf4rJpDhm8xfjASZ058mM",
          "ctx": null,
          "_testId": "urn:uuid:9cd5a779-5470-4949-8cdc-de18c6164aab",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 81387,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.1 The type property MUST be JsonSchemaCredential."
          },
          "duration": 1719,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "2.2 The credentialSubject property MUST contain two properties: type - the value of which MUST be JsonSchema; jsonSchema - an object which contains a valid JSON Schema",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "Hf4rJpDhm8xfjASZ058mM",
          "ctx": null,
          "_testId": "urn:uuid:bc7dcfa1-6071-41f3-ba43-af69b7b651fc",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 83112,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.2 The credentialSubject property MUST contain two properties: type - the value of which MUST be JsonSchema; jsonSchema - an object which contains a valid JSON Schema"
          },
          "duration": 3283,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "2.2 The value of the credentialSchema property MUST always be set to [known json schema]",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "Hf4rJpDhm8xfjASZ058mM",
          "ctx": null,
          "_testId": "urn:uuid:689f7853-12cf-421d-a1fb-c542ff87fa5c",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 86395,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.2 The value of the credentialSchema property MUST always be set to [known json schema]"
          },
          "duration": 1742,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes",
          "body": "async function() {\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          if (schemaVersionName === JsonSchemaVersions['202012']) {\n            should.equal(true, true);\n          } else {\n            this.skip();\n          }\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": true,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "Hf4rJpDhm8xfjASZ058mM",
          "ctx": null,
          "_testId": "urn:uuid:688ced46-0ee3-49e1-88f9-a58dc9f1a195",
          "_events": {},
          "_eventsCount": 1,
          "cell": {
            "columnId": "tbd",
            "rowId": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes"
          },
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 87346,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 0,
          "state": "pending"
        },
        {
          "type": "test",
          "title": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "Hf4rJpDhm8xfjASZ058mM",
          "ctx": null,
          "_testId": "urn:uuid:1e2115c6-3258-4a92-9f42-3c8972ff1e0c",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 88140,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference"
          },
          "duration": 2543,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "3.1.2, 4 The $schema property MUST be present in each schema",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "Hf4rJpDhm8xfjASZ058mM",
          "ctx": null,
          "_testId": "urn:uuid:aebaa91e-c60a-4e8b-a77e-d0482a97fa04",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 90669,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "3.1.2, 4 The $schema property MUST be present in each schema"
          },
          "duration": 1704,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "Hf4rJpDhm8xfjASZ058mM",
          "ctx": null,
          "_testId": "urn:uuid:1bc349f1-bc0b-4f58-a72d-354cf6863d7e",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 92356,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 911,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "Hf4rJpDhm8xfjASZ058mM",
          "ctx": null,
          "_testId": "urn:uuid:f6211805-5706-4814-ac01-59f757a33fa2",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 93286,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 929,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "Hf4rJpDhm8xfjASZ058mM",
          "ctx": null,
          "_testId": "urn:uuid:edcc9ac2-457b-4f02-a8fb-c7ff353fa43c",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 94221,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 935,
          "state": "passed",
          "speed": "slow"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 150000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "Xcd-xDURP-2z3DYI2fIMv",
      "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
      "matrix": true,
      "report": true,
      "implemented": [
        "tbd"
      ],
      "rowLabel": "Test Name",
      "columnLabel": "Implementation",
      "_testId": "urn:uuid:4147fd2e-e4c6-469b-8ce9-03341aedecd8"
    },
    {
      "title": "JsonSchemaCredential â€“ JSON Schema 2020-12",
      "ctx": null,
      "suites": [
        {
          "title": "tbd",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "WX00MCKxh-PzRCNzejnAU",
              "ctx": null,
              "_testId": "urn:uuid:36fdbca0-8345-4d84-b8aa-30e65a15fe33",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 95123,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential."
              },
              "duration": 1671,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2.1 The type property MUST be JsonSchemaCredential.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "WX00MCKxh-PzRCNzejnAU",
              "ctx": null,
              "_testId": "urn:uuid:347cf2a2-6e6d-4df0-8dd9-795d73a864da",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 96808,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.1 The type property MUST be JsonSchemaCredential."
              },
              "duration": 1726,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2.2 The credentialSubject property MUST contain two properties: type - the value of which MUST be JsonSchema; jsonSchema - an object which contains a valid JSON Schema",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "WX00MCKxh-PzRCNzejnAU",
              "ctx": null,
              "_testId": "urn:uuid:4764e855-fd9b-420a-ae7a-03e3c91b710b",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 98550,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.2 The credentialSubject property MUST contain two properties: type - the value of which MUST be JsonSchema; jsonSchema - an object which contains a valid JSON Schema"
              },
              "duration": 3311,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2.2 The value of the credentialSchema property MUST always be set to [known json schema]",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "WX00MCKxh-PzRCNzejnAU",
              "ctx": null,
              "_testId": "urn:uuid:44c12808-4889-4730-99b3-b4dfa73479a4",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 101855,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.2 The value of the credentialSchema property MUST always be set to [known json schema]"
              },
              "duration": 1698,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes",
              "body": "async function() {\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          if (schemaVersionName === JsonSchemaVersions['202012']) {\n            should.equal(true, true);\n          } else {\n            this.skip();\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "WX00MCKxh-PzRCNzejnAU",
              "ctx": null,
              "_testId": "urn:uuid:b254008c-4044-491c-9636-2304de29b1af",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "tbd",
                "rowId": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 102780,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "WX00MCKxh-PzRCNzejnAU",
              "ctx": null,
              "_testId": "urn:uuid:2e3d798f-40d5-43b8-b0ec-c9a33ec598d2",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 103558,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference"
              },
              "duration": 2493,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3.1.2, 4 The $schema property MUST be present in each schema",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "WX00MCKxh-PzRCNzejnAU",
              "ctx": null,
              "_testId": "urn:uuid:7c33468b-b9be-4a07-9735-271dc80f357b",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 106037,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "3.1.2, 4 The $schema property MUST be present in each schema"
              },
              "duration": 1680,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "WX00MCKxh-PzRCNzejnAU",
              "ctx": null,
              "_testId": "urn:uuid:59b4eab2-8ed4-4ff7-9d36-7655f889737f",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 107740,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 935,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "WX00MCKxh-PzRCNzejnAU",
              "ctx": null,
              "_testId": "urn:uuid:b4c973cd-affb-42f9-b729-72d5d9104536",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 108656,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 916,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "WX00MCKxh-PzRCNzejnAU",
              "ctx": null,
              "_testId": "urn:uuid:5c3cd53b-77d0-479c-a559-04ed296495bc",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 109568,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 911,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 150000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "wLvEas5CjWTxwuPpeLeLR",
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "_testId": "urn:uuid:65101d82-6d89-4b82-a741-5ff836339228"
        }
      ],
      "tests": [
        {
          "type": "test",
          "title": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "WX00MCKxh-PzRCNzejnAU",
          "ctx": null,
          "_testId": "urn:uuid:36fdbca0-8345-4d84-b8aa-30e65a15fe33",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 95123,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential."
          },
          "duration": 1671,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "2.1 The type property MUST be JsonSchemaCredential.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "WX00MCKxh-PzRCNzejnAU",
          "ctx": null,
          "_testId": "urn:uuid:347cf2a2-6e6d-4df0-8dd9-795d73a864da",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 96808,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.1 The type property MUST be JsonSchemaCredential."
          },
          "duration": 1726,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "2.2 The credentialSubject property MUST contain two properties: type - the value of which MUST be JsonSchema; jsonSchema - an object which contains a valid JSON Schema",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "WX00MCKxh-PzRCNzejnAU",
          "ctx": null,
          "_testId": "urn:uuid:4764e855-fd9b-420a-ae7a-03e3c91b710b",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 98550,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.2 The credentialSubject property MUST contain two properties: type - the value of which MUST be JsonSchema; jsonSchema - an object which contains a valid JSON Schema"
          },
          "duration": 3311,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "2.2 The value of the credentialSchema property MUST always be set to [known json schema]",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "WX00MCKxh-PzRCNzejnAU",
          "ctx": null,
          "_testId": "urn:uuid:44c12808-4889-4730-99b3-b4dfa73479a4",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 101855,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.2 The value of the credentialSchema property MUST always be set to [known json schema]"
          },
          "duration": 1698,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes",
          "body": "async function() {\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          if (schemaVersionName === JsonSchemaVersions['202012']) {\n            should.equal(true, true);\n          } else {\n            this.skip();\n          }\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "WX00MCKxh-PzRCNzejnAU",
          "ctx": null,
          "_testId": "urn:uuid:b254008c-4044-491c-9636-2304de29b1af",
          "_events": {},
          "_eventsCount": 1,
          "cell": {
            "columnId": "tbd",
            "rowId": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes"
          },
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 102780,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 1,
          "state": "passed",
          "speed": "fast"
        },
        {
          "type": "test",
          "title": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "WX00MCKxh-PzRCNzejnAU",
          "ctx": null,
          "_testId": "urn:uuid:2e3d798f-40d5-43b8-b0ec-c9a33ec598d2",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 103558,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference"
          },
          "duration": 2493,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "3.1.2, 4 The $schema property MUST be present in each schema",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "WX00MCKxh-PzRCNzejnAU",
          "ctx": null,
          "_testId": "urn:uuid:7c33468b-b9be-4a07-9735-271dc80f357b",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 106037,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "3.1.2, 4 The $schema property MUST be present in each schema"
          },
          "duration": 1680,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "WX00MCKxh-PzRCNzejnAU",
          "ctx": null,
          "_testId": "urn:uuid:59b4eab2-8ed4-4ff7-9d36-7655f889737f",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 107740,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 935,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "WX00MCKxh-PzRCNzejnAU",
          "ctx": null,
          "_testId": "urn:uuid:b4c973cd-affb-42f9-b729-72d5d9104536",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 108656,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 916,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "WX00MCKxh-PzRCNzejnAU",
          "ctx": null,
          "_testId": "urn:uuid:5c3cd53b-77d0-479c-a559-04ed296495bc",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 109568,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 911,
          "state": "passed",
          "speed": "slow"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 150000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "Xcd-xDURP-2z3DYI2fIMv",
      "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
      "matrix": true,
      "report": true,
      "implemented": [
        "tbd"
      ],
      "rowLabel": "Test Name",
      "columnLabel": "Implementation",
      "_testId": "urn:uuid:874beeb2-e8a3-483e-bcb0-afee268e1d37"
    },
    {
      "title": "JsonSchemaCredential â€“ JSON Schema Draft-7",
      "ctx": null,
      "suites": [
        {
          "title": "tbd",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "idbCsb7T7WXM3xt1i63xd",
              "ctx": null,
              "_testId": "urn:uuid:5fd3b7f4-805e-4894-8ec3-230bfdb86f1b",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 110500,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential."
              },
              "duration": 1713,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2.1 The type property MUST be JsonSchemaCredential.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "idbCsb7T7WXM3xt1i63xd",
              "ctx": null,
              "_testId": "urn:uuid:d95145cd-56ba-4259-9c7c-18e493d66f2c",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 112208,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.1 The type property MUST be JsonSchemaCredential."
              },
              "duration": 1705,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2.2 The credentialSubject property MUST contain two properties: type - the value of which MUST be JsonSchema; jsonSchema - an object which contains a valid JSON Schema",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "idbCsb7T7WXM3xt1i63xd",
              "ctx": null,
              "_testId": "urn:uuid:d40f1372-e02d-4c10-bd18-d731c0310be7",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 113922,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.2 The credentialSubject property MUST contain two properties: type - the value of which MUST be JsonSchema; jsonSchema - an object which contains a valid JSON Schema"
              },
              "duration": 3294,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2.2 The value of the credentialSchema property MUST always be set to [known json schema]",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "idbCsb7T7WXM3xt1i63xd",
              "ctx": null,
              "_testId": "urn:uuid:3e1eee65-71e1-41ca-9f75-c45ac572c9c4",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 117202,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "2.2 The value of the credentialSchema property MUST always be set to [known json schema]"
              },
              "duration": 1695,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes",
              "body": "async function() {\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          if (schemaVersionName === JsonSchemaVersions['202012']) {\n            should.equal(true, true);\n          } else {\n            this.skip();\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "idbCsb7T7WXM3xt1i63xd",
              "ctx": null,
              "_testId": "urn:uuid:67f1bf89-ccd3-44d0-a84b-a87f42ff700e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "tbd",
                "rowId": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 118129,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "idbCsb7T7WXM3xt1i63xd",
              "ctx": null,
              "_testId": "urn:uuid:747688c4-d9e8-4cc8-abff-15accc761e44",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 118909,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference"
              },
              "duration": 2508,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3.1.2, 4 The $schema property MUST be present in each schema",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "idbCsb7T7WXM3xt1i63xd",
              "ctx": null,
              "_testId": "urn:uuid:308c2d69-54c9-43c3-b0e6-a4080ef64d72",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 121421,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "3.1.2, 4 The $schema property MUST be present in each schema"
              },
              "duration": 1727,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "idbCsb7T7WXM3xt1i63xd",
              "ctx": null,
              "_testId": "urn:uuid:9181e421-4a0e-4fc5-96ca-e54642f6502c",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 123140,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 923,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "idbCsb7T7WXM3xt1i63xd",
              "ctx": null,
              "_testId": "urn:uuid:482a6871-193a-4488-84ad-37d5c8b53ca0",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 124082,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 942,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
              "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
              "parent": "idbCsb7T7WXM3xt1i63xd",
              "ctx": null,
              "_testId": "urn:uuid:351a6127-7dba-4178-9019-f0d4a4f41563",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 125012,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "tbd",
                "rowId": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
              },
              "duration": 930,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 150000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "3O_salgHRkJBD44OkTHtV",
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "_testId": "urn:uuid:4af12c23-4699-4f27-829e-9692bf18491d"
        }
      ],
      "tests": [
        {
          "type": "test",
          "title": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "idbCsb7T7WXM3xt1i63xd",
          "ctx": null,
          "_testId": "urn:uuid:5fd3b7f4-805e-4894-8ec3-230bfdb86f1b",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 110500,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.1 ID - The value MUST be a URL that identifies the schema associated with the verifiable credential."
          },
          "duration": 1713,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "2.1 The type property MUST be JsonSchemaCredential.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "idbCsb7T7WXM3xt1i63xd",
          "ctx": null,
          "_testId": "urn:uuid:d95145cd-56ba-4259-9c7c-18e493d66f2c",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 112208,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.1 The type property MUST be JsonSchemaCredential."
          },
          "duration": 1705,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "2.2 The credentialSubject property MUST contain two properties: type - the value of which MUST be JsonSchema; jsonSchema - an object which contains a valid JSON Schema",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "idbCsb7T7WXM3xt1i63xd",
          "ctx": null,
          "_testId": "urn:uuid:d40f1372-e02d-4c10-bd18-d731c0310be7",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 113922,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.2 The credentialSubject property MUST contain two properties: type - the value of which MUST be JsonSchema; jsonSchema - an object which contains a valid JSON Schema"
          },
          "duration": 3294,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "2.2 The value of the credentialSchema property MUST always be set to [known json schema]",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "idbCsb7T7WXM3xt1i63xd",
          "ctx": null,
          "_testId": "urn:uuid:3e1eee65-71e1-41ca-9f75-c45ac572c9c4",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 117202,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "2.2 The value of the credentialSchema property MUST always be set to [known json schema]"
          },
          "duration": 1695,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes",
          "body": "async function() {\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          if (schemaVersionName === JsonSchemaVersions['202012']) {\n            should.equal(true, true);\n          } else {\n            this.skip();\n          }\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": true,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "idbCsb7T7WXM3xt1i63xd",
          "ctx": null,
          "_testId": "urn:uuid:67f1bf89-ccd3-44d0-a84b-a87f42ff700e",
          "_events": {},
          "_eventsCount": 1,
          "cell": {
            "columnId": "tbd",
            "rowId": "3 Implementers MUST provide support for JSON Schema specifications where, in the following table, the required column's value is yes"
          },
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 118129,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "duration": 1,
          "state": "pending"
        },
        {
          "type": "test",
          "title": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "idbCsb7T7WXM3xt1i63xd",
          "ctx": null,
          "_testId": "urn:uuid:747688c4-d9e8-4cc8-abff-15accc761e44",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 118909,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "3.1.1 The $id MUST be present and its value MUST represent a valid URI-reference"
          },
          "duration": 2508,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "3.1.2, 4 The $schema property MUST be present in each schema",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "idbCsb7T7WXM3xt1i63xd",
          "ctx": null,
          "_testId": "urn:uuid:308c2d69-54c9-43c3-b0e6-a4080ef64d72",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 121421,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "3.1.2, 4 The $schema property MUST be present in each schema"
          },
          "duration": 1727,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "idbCsb7T7WXM3xt1i63xd",
          "ctx": null,
          "_testId": "urn:uuid:9181e421-4a0e-4fc5-96ca-e54642f6502c",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 123140,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Success) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 923,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "idbCsb7T7WXM3xt1i63xd",
          "ctx": null,
          "_testId": "urn:uuid:482a6871-193a-4488-84ad-37d5c8b53ca0",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 124082,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Failure) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 942,
          "state": "passed",
          "speed": "slow"
        },
        {
          "type": "test",
          "title": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate.",
          "body": "async function() {\n          await generateTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          this.test.cell = {columnId: i.name, rowId: this.test.title};\n          const result = await checkTestResults(i.name, schemaVersionName, jsonSchemaType, this.test.title);\n          should.equal(result, TestResult.success);\n        }",
          "async": 0,
          "sync": true,
          "_timeout": 150000,
          "_slow": 75,
          "_retries": -1,
          "timedOut": false,
          "_currentRetry": 0,
          "pending": false,
          "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
          "parent": "idbCsb7T7WXM3xt1i63xd",
          "ctx": null,
          "_testId": "urn:uuid:351a6127-7dba-4178-9019-f0d4a4f41563",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 125012,
            "_onTimeout": null,
            "_repeat": null,
            "_destroyed": true
          },
          "cell": {
            "columnId": "tbd",
            "rowId": "4.2 (Indeterminate) Validation MUST result in one of the following three possible outcomes: success, failure, or indeterminate."
          },
          "duration": 930,
          "state": "passed",
          "speed": "slow"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 150000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "Xcd-xDURP-2z3DYI2fIMv",
      "file": "/home/runner/work/vc-json-schema-test-suite/vc-json-schema-test-suite/tests/jsonschemacredential.js",
      "matrix": true,
      "report": true,
      "implemented": [
        "tbd"
      ],
      "rowLabel": "Test Name",
      "columnLabel": "Implementation",
      "_testId": "urn:uuid:0ee30cd3-58ae-4c90-b1a7-71dae576112e"
    }
  ],
  "tests": [],
  "root": true,
  "pending": false,
  "_retries": -1,
  "_beforeEach": [],
  "_beforeAll": [],
  "_afterEach": [],
  "_afterAll": [],
  "_timeout": 150000,
  "_slow": 75,
  "_bail": false,
  "_onlyTests": [],
  "_onlySuites": [],
  "delayed": false,
  "_events": {
    "pre-require": [
      null,
      null
    ]
  },
  "_eventsCount": 1,
  "_testId": "urn:uuid:ad0e57a3-a096-40d8-97a4-9e1ec4f6b355"
}